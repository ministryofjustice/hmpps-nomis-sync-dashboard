/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/queue-admin/retry-dlq/{dlqName}': {
    put: operations['retryDlq']
  }
  '/queue-admin/retry-all-dlqs': {
    put: operations['retryAllDlqs']
  }
  '/queue-admin/purge-queue/{queueName}': {
    put: operations['purgeQueue']
  }
  '/migrate/activities/{migrationId}/end': {
    /**
     * End all activities and allocations for a migration
     * @description Get all NOMIS activities migrated on a migrationId and ends them all. Requires role MIGRATE_ACTIVITIES
     */
    put: operations['endMigratedActivities']
  }
  '/migrate/visits/{migrationId}/cancel': {
    /**
     * Cancels a running migration. The actual cancellation might take several minutes to complete
     * @description Requires role <b>MIGRATE_VISITS</b>
     */
    post: operations['cancel']
  }
  '/migrate/visits': {
    /**
     * Starts a visit migration
     * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_VISITS</b>
     */
    post: operations['migrateVisits']
  }
  '/migrate/sentencing/{migrationId}/cancel': {
    /**
     * Cancels a running migration. The actual cancellation might take several minutes to complete
     * @description Requires role <b>MIGRATE_SENTENCING</b>
     */
    post: operations['cancel_1']
  }
  '/migrate/sentencing': {
    /**
     * Starts a sentencing migration
     * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_SENTENCING</b>
     */
    post: operations['migrateSentencing']
  }
  '/migrate/incidents/{migrationId}/cancel': {
    /**
     * Cancels a running migration. The actual cancellation might take several minutes to complete
     * @description Requires role <b>MIGRATE_INCIDENTS</b>
     */
    post: operations['cancel_2']
  }
  '/migrate/incidents': {
    /**
     * Starts an incidents migration
     * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_INCIDENTS</b>
     */
    post: operations['migrateIncidents']
  }
  '/migrate/appointments/{migrationId}/cancel': {
    /**
     * Cancels a running migration. The actual cancellation might take several minutes to complete
     * @description Requires role <b>MIGRATE_APPOINTMENTS</b>
     */
    post: operations['cancel_3']
  }
  '/migrate/appointments': {
    /**
     * Starts an appointments migration
     * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_APPOINTMENTS</b>
     */
    post: operations['migrateAppointments']
  }
  '/migrate/allocations/{migrationId}/cancel': {
    /**
     * Cancels a running migration. The actual cancellation might take several minutes to complete
     * @description Requires role <b>MIGRATE_ACTIVITIES</b>
     */
    post: operations['cancel_4']
  }
  '/migrate/allocations': {
    /**
     * Starts an allocations migration
     * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_ACTIVITIES</b>
     */
    post: operations['migrateAllocations']
  }
  '/migrate/adjudications/{migrationId}/cancel': {
    /**
     * Cancels a running migration. The actual cancellation might take several minutes to complete
     * @description Requires role <b>MIGRATE_ADJUDICATIONS</b>
     */
    post: operations['cancel_5']
  }
  '/migrate/adjudications': {
    /**
     * Starts an adjudications migration
     * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_ADJUDICATIONS</b>
     */
    post: operations['migrateAdjudications']
  }
  '/migrate/activities/{migrationId}/cancel': {
    /**
     * Cancels a running migration. The actual cancellation might take several minutes to complete
     * @description Requires role <b>MIGRATE_ACTIVITIES</b>
     */
    post: operations['cancel_6']
  }
  '/migrate/activities': {
    /**
     * Starts an activities migration
     * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_ACTIVITIES</b>
     */
    post: operations['migrateActivities']
  }
  '/queue-admin/get-dlq-messages/{dlqName}': {
    get: operations['getDlqMessages']
  }
  '/migrate/visits/rooms/usage': {
    /**
     * get visit room usage and mappings by filter
     * @description Retrieves a list of rooms with usage count and vsip mapping for the (filtered) visits
     */
    get: operations['getVisitRoomUsageDetailsByFilter']
  }
  '/migrate/visits/history/{migrationId}': {
    /**
     * Gets a specific migration history record
     * @description Requires role <b>MIGRATE_VISITS</b>
     */
    get: operations['get']
  }
  '/migrate/visits/history': {
    /**
     * Lists all filtered migration history records un-paged for visits
     * @description The records are un-paged and requires role <b>MIGRATE_VISITS</b>
     */
    get: operations['getAll']
  }
  '/migrate/visits/active-migration': {
    /**
     * Gets active/currently running migration data, using migration record and migration queues
     * @description Requires role <b>MIGRATE_VISITS</b>
     */
    get: operations['getActiveMigrationDetails']
  }
  '/migrate/sentencing/history/{migrationId}': {
    /**
     * Gets a specific migration history record
     * @description Requires role <b>MIGRATE_SENTENCING</b>
     */
    get: operations['get_1']
  }
  '/migrate/sentencing/history': {
    /**
     * Lists all filtered migration history records un-paged for sentencing
     * @description The records are un-paged and requires role <b>MIGRATE_SENTENCING</b>
     */
    get: operations['getAll_1']
  }
  '/migrate/sentencing/active-migration': {
    /**
     * Gets active/currently running migration data, using migration record and migration queues
     * @description Requires role <b>MIGRATE_SENTENCING</b>
     */
    get: operations['getActiveMigrationDetails_1']
  }
  '/migrate/incidents/history/{migrationId}': {
    /**
     * Gets a specific migration history record
     * @description Requires role <b>MIGRATE_INCIDENTS</b>
     */
    get: operations['get_2']
  }
  '/migrate/incidents/history': {
    /**
     * Lists all filtered migration history records un-paged for incidents
     * @description The records are un-paged and requires role <b>MIGRATE_INCIDENTS</b>
     */
    get: operations['getAll_2']
  }
  '/migrate/incidents/active-migration': {
    /**
     * Gets active/currently running migration data, using migration record and migration queues
     * @description Requires role <b>MIGRATE_INCIDENTS</b>
     */
    get: operations['getActiveMigrationDetails_2']
  }
  '/migrate/appointments/history/{migrationId}': {
    /**
     * Gets a specific migration history record
     * @description Requires role <b>MIGRATE_APPOINTMENTS</b>
     */
    get: operations['get_3']
  }
  '/migrate/appointments/history': {
    /**
     * Lists all filtered migration history records un-paged for appointments
     * @description The records are un-paged and requires role <b>MIGRATE_APPOINTMENTS</b>
     */
    get: operations['getAll_3']
  }
  '/migrate/appointments/active-migration': {
    /**
     * Gets active/currently running migration data, using migration record and migration queues
     * @description Requires role <b>MIGRATE_APPOINTMENTS</b>
     */
    get: operations['getActiveMigrationDetails_3']
  }
  '/migrate/allocations/history/{migrationId}': {
    /**
     * Gets a specific migration history record
     * @description Requires role <b>MIGRATE_ACTIVITIES</b>
     */
    get: operations['get_4']
  }
  '/migrate/allocations/history': {
    /**
     * Lists all filtered migration history records un-paged for allocations
     * @description The records are un-paged and requires role <b>MIGRATE_ACTIVITIES</b>
     */
    get: operations['getAll_4']
  }
  '/migrate/allocations/active-migration': {
    /**
     * Gets active/currently running migration data, using migration record and migration queues
     * @description Requires role <b>MIGRATE_ACTIVITIES</b>
     */
    get: operations['getActiveMigrationDetails_4']
  }
  '/migrate/adjudications/history/{migrationId}': {
    /**
     * Gets a specific migration history record
     * @description Requires role <b>MIGRATE_ADJUDICATIONS</b>
     */
    get: operations['get_5']
  }
  '/migrate/adjudications/history': {
    /**
     * Lists all filtered migration history records un-paged for adjudications
     * @description The records are un-paged and requires role <b>MIGRATE_ADJUDICATIONS</b>
     */
    get: operations['getAll_5']
  }
  '/migrate/adjudications/active-migration': {
    /**
     * Gets active/currently running migration data, using migration record and migration queues
     * @description Requires role <b>MIGRATE_ADJUDICATIONS</b>
     */
    get: operations['getActiveMigrationDetails_5']
  }
  '/migrate/activities/history/{migrationId}': {
    /**
     * Gets a specific migration history record
     * @description Requires role <b>MIGRATE_ACTIVITIES</b>
     */
    get: operations['get_6']
  }
  '/migrate/activities/history': {
    /**
     * Lists all filtered migration history records un-paged for activities
     * @description The records are un-paged and requires role <b>MIGRATE_ACTIVITIES</b>
     */
    get: operations['getAll_6']
  }
  '/migrate/activities/active-migration': {
    /**
     * Gets active/currently running migration data, using migration record and migration queues
     * @description Requires role <b>MIGRATE_ACTIVITIES</b>
     */
    get: operations['getActiveMigrationDetails_6']
  }
  '/history': {
    /**
     * Lists all filtered migration history
     * @description The records are un-paged and requires role <b>MIGRATION_ADMIN</b>
     */
    get: operations['getAll_7']
    /**
     * Deletes all migration history records
     * @description This is only required for test environments and requires role <b>MIGRATION_ADMIN</b>
     */
    delete: operations['deleteAll']
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    DlqMessage: {
      body: {
        [key: string]: Record<string, never>
      }
      messageId: string
    }
    RetryDlqResult: {
      /** Format: int32 */
      messagesFoundCount: number
      messages: components['schemas']['DlqMessage'][]
    }
    PurgeQueueResult: {
      /** Format: int32 */
      messagesFoundCount: number
    }
    ErrorResponse: {
      /** Format: int32 */
      status: number
      /** Format: int32 */
      errorCode?: number
      userMessage?: string
      developerMessage?: string
      moreInfo?: string
    }
    /** @description Filter specifying what should be migrated from NOMIS to Visits service */
    VisitsMigrationFilter: {
      /**
       * @description List of prison Ids (AKA Agency Ids) to migrate visits from
       * @example MDI
       */
      prisonIds: string[]
      /**
       * @description List of visit types to migrate
       * @default [
       *   "SCON"
       * ]
       * @example [
       *   "SCON",
       *   "OFFI"
       * ]
       */
      visitTypes: string[]
      /**
       * @description Only include visits created after this date. NB this is creation date not the actual visit date
       * @example 2021-07-05T10:35:17
       */
      fromDateTime?: string
      /**
       * @description Only include visits created before this date. NB this is creation date not the actual visit date
       * @example 2021-07-05T10:35:17
       */
      toDateTime?: string
      /**
       * @description When true exclude visits without an associated room (visits created during the VSIP synchronisation process), defaults to false. Only required during testing when mapping records are manually deleted
       * @default false
       * @example false
       */
      ignoreMissingRoom: boolean
    }
    MigrationContextVisitsMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'APPOINTMENTS'
        | 'ADJUDICATIONS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'INCIDENTS'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['VisitsMigrationFilter']
    }
    /** @description Filter specifying what should be migrated from NOMIS to Sentencing service */
    SentencingMigrationFilter: {
      /**
       * Format: date
       * @description Only include Sentencing entity issued on or after this date
       * @example 2020-03-23
       */
      fromDate?: string
      /**
       * Format: date
       * @description Only include Sentencing entity issued before or on this date
       * @example 2020-03-24
       */
      toDate?: string
    }
    MigrationContextSentencingMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'APPOINTMENTS'
        | 'ADJUDICATIONS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'INCIDENTS'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['SentencingMigrationFilter']
    }
    /** @description Filter specifying what should be migrated from NOMIS to the Incident Reporting service */
    IncidentsMigrationFilter: {
      /**
       * Format: date
       * @description Only include incidents created on or after this date
       * @example 2020-03-23
       */
      fromDate?: string
      /**
       * Format: date
       * @description Only include incidents created before or on this date
       * @example 2020-03-24
       */
      toDate?: string
    }
    MigrationContextIncidentsMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'APPOINTMENTS'
        | 'ADJUDICATIONS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'INCIDENTS'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['IncidentsMigrationFilter']
    }
    /** @description Filter specifying what should be migrated from NOMIS to Appointments service */
    AppointmentsMigrationFilter: {
      /**
       * Format: date
       * @description Only include appointments on or after this date
       * @example 2020-03-23
       */
      fromDate?: string
      /**
       * Format: date
       * @description Only include appointments before or on this date
       * @example 2020-03-24
       */
      toDate?: string
      /**
       * @description Only include appointments for these prison ids
       * @example ['MDI','LEI']
       */
      prisonIds: string[]
    }
    MigrationContextAppointmentsMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'APPOINTMENTS'
        | 'ADJUDICATIONS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'INCIDENTS'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['AppointmentsMigrationFilter']
    }
    /** @description Filter specifying which allocations should be migrated from NOMIS to DPS service */
    AllocationsMigrationFilter: {
      /**
       * @description Only include allocations for this prison id
       * @example MDI
       */
      prisonId: string
      /**
       * Format: int64
       * @description Only include allocations from a single course activity
       * @example 12345
       */
      courseActivityId?: number
    }
    MigrationContextAllocationsMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'APPOINTMENTS'
        | 'ADJUDICATIONS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'INCIDENTS'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['AllocationsMigrationFilter']
    }
    /** @description Filter specifying what should be migrated from NOMIS to the Adjudications service */
    AdjudicationsMigrationFilter: {
      /**
       * Format: date
       * @description Only include adjudications created on or after this date
       * @example 2020-03-23
       */
      fromDate?: string
      /**
       * Format: date
       * @description Only include adjudications created before or on this date
       * @example 2020-03-24
       */
      toDate?: string
      /**
       * @description Only include adjudications for these prison ids
       * @example ['MDI','LEI']
       */
      prisonIds: string[]
    }
    MigrationContextAdjudicationsMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'APPOINTMENTS'
        | 'ADJUDICATIONS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'INCIDENTS'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['AdjudicationsMigrationFilter']
    }
    /** @description Filter specifying which activities should be migrated from NOMIS to DPS service */
    ActivitiesMigrationFilter: {
      /**
       * @description Only include activities for this prison id
       * @example MDI
       */
      prisonId: string
      /**
       * Format: int64
       * @description Only include a single course activity
       * @example 12345
       */
      courseActivityId?: number
    }
    MigrationContextActivitiesMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'APPOINTMENTS'
        | 'ADJUDICATIONS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'INCIDENTS'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['ActivitiesMigrationFilter']
    }
    GetDlqResult: {
      /** Format: int32 */
      messagesFoundCount: number
      /** Format: int32 */
      messagesReturnedCount: number
      messages: components['schemas']['DlqMessage'][]
    }
    /** @description Visit room usage and vsip mapping */
    VisitRoomUsageResponse: {
      /** @description The nomis internal location description */
      agencyInternalLocationDescription: string
      /**
       * Format: int64
       * @description room usage count
       */
      count: number
      /** @description VSIP room mapping */
      vsipRoom?: string
      /** @description The nomis prison id */
      prisonId: string
    }
    MigrationHistory: {
      migrationId: string
      /** @example 2021-07-05T10:35:17 */
      whenStarted: string
      /** @example 2021-07-05T10:35:17 */
      whenEnded?: string
      /** Format: int64 */
      estimatedRecordCount: number
      filter?: string
      /** Format: int64 */
      recordsMigrated: number
      /** Format: int64 */
      recordsFailed: number
      /** @enum {string} */
      migrationType:
        | 'VISITS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'APPOINTMENTS'
        | 'ADJUDICATIONS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'INCIDENTS'
      /** @enum {string} */
      status: 'STARTED' | 'COMPLETED' | 'CANCELLED_REQUESTED' | 'CANCELLED'
      id: string
      isNew: boolean
    }
    InProgressMigration: {
      /** Format: int64 */
      recordsMigrated?: number
      /** Format: int32 */
      toBeProcessedCount?: number
      /** Format: int32 */
      beingProcessedCount?: number
      /** Format: int32 */
      recordsFailed?: number
      migrationId?: string
      /** @example 2021-07-05T10:35:17 */
      whenStarted?: string
      /** Format: int64 */
      estimatedRecordCount?: number
      /** @enum {string} */
      migrationType?:
        | 'VISITS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'APPOINTMENTS'
        | 'ADJUDICATIONS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'INCIDENTS'
      /** @enum {string} */
      status?: 'STARTED' | 'COMPLETED' | 'CANCELLED_REQUESTED' | 'CANCELLED'
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type $defs = Record<string, never>

export type external = Record<string, never>

export interface operations {
  retryDlq: {
    parameters: {
      path: {
        dlqName: string
      }
    }
    responses: {
      /** @description OK */
      200: {
        content: {
          '*/*': components['schemas']['RetryDlqResult']
        }
      }
    }
  }
  retryAllDlqs: {
    responses: {
      /** @description OK */
      200: {
        content: {
          '*/*': components['schemas']['RetryDlqResult'][]
        }
      }
    }
  }
  purgeQueue: {
    parameters: {
      path: {
        queueName: string
      }
    }
    responses: {
      /** @description OK */
      200: {
        content: {
          '*/*': components['schemas']['PurgeQueueResult']
        }
      }
    }
  }
  /**
   * End all activities and allocations for a migration
   * @description Get all NOMIS activities migrated on a migrationId and ends them all. Requires role MIGRATE_ACTIVITIES
   */
  endMigratedActivities: {
    parameters: {
      path: {
        /** @description Migration ID */
        migrationId: string
      }
    }
    responses: {
      /** @description OK */
      200: {
        content: never
      }
      /** @description Invalid request */
      400: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires role NOMIS_ACTIVITIES */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Cancels a running migration. The actual cancellation might take several minutes to complete
   * @description Requires role <b>MIGRATE_VISITS</b>
   */
  cancel: {
    parameters: {
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
    }
    responses: {
      /** @description Cancellation request accepted */
      202: {
        content: never
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description No running migration found with migration id */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Starts a visit migration
   * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_VISITS</b>
   */
  migrateVisits: {
    requestBody: {
      content: {
        'application/json': components['schemas']['VisitsMigrationFilter']
      }
    }
    responses: {
      /** @description Migration process started */
      202: {
        content: {
          'application/json': components['schemas']['MigrationContextVisitsMigrationFilter']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to start migration */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Cancels a running migration. The actual cancellation might take several minutes to complete
   * @description Requires role <b>MIGRATE_SENTENCING</b>
   */
  cancel_1: {
    parameters: {
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
    }
    responses: {
      /** @description Cancellation request accepted */
      202: {
        content: never
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description No running migration found with migration id */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Starts a sentencing migration
   * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_SENTENCING</b>
   */
  migrateSentencing: {
    requestBody: {
      content: {
        'application/json': components['schemas']['SentencingMigrationFilter']
      }
    }
    responses: {
      /** @description Migration process started */
      202: {
        content: {
          'application/json': components['schemas']['MigrationContextSentencingMigrationFilter']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to start migration */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Cancels a running migration. The actual cancellation might take several minutes to complete
   * @description Requires role <b>MIGRATE_INCIDENTS</b>
   */
  cancel_2: {
    parameters: {
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
    }
    responses: {
      /** @description Cancellation request accepted */
      202: {
        content: never
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description No running migration found with migration id */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Starts an incidents migration
   * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_INCIDENTS</b>
   */
  migrateIncidents: {
    requestBody: {
      content: {
        'application/json': components['schemas']['IncidentsMigrationFilter']
      }
    }
    responses: {
      /** @description Migration process started */
      202: {
        content: {
          'application/json': components['schemas']['MigrationContextIncidentsMigrationFilter']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to start migration */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Cancels a running migration. The actual cancellation might take several minutes to complete
   * @description Requires role <b>MIGRATE_APPOINTMENTS</b>
   */
  cancel_3: {
    parameters: {
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
    }
    responses: {
      /** @description Cancellation request accepted */
      202: {
        content: never
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description No running migration found with migration id */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Starts an appointments migration
   * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_APPOINTMENTS</b>
   */
  migrateAppointments: {
    requestBody: {
      content: {
        'application/json': components['schemas']['AppointmentsMigrationFilter']
      }
    }
    responses: {
      /** @description Migration process started */
      202: {
        content: {
          'application/json': components['schemas']['MigrationContextAppointmentsMigrationFilter']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to start migration */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Cancels a running migration. The actual cancellation might take several minutes to complete
   * @description Requires role <b>MIGRATE_ACTIVITIES</b>
   */
  cancel_4: {
    parameters: {
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
    }
    responses: {
      /** @description Cancellation request accepted */
      202: {
        content: never
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description No running migration found with migration id */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Starts an allocations migration
   * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_ACTIVITIES</b>
   */
  migrateAllocations: {
    requestBody: {
      content: {
        'application/json': components['schemas']['AllocationsMigrationFilter']
      }
    }
    responses: {
      /** @description Migration process started */
      202: {
        content: {
          'application/json': components['schemas']['MigrationContextAllocationsMigrationFilter']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to start migration */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Cancels a running migration. The actual cancellation might take several minutes to complete
   * @description Requires role <b>MIGRATE_ADJUDICATIONS</b>
   */
  cancel_5: {
    parameters: {
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
    }
    responses: {
      /** @description Cancellation request accepted */
      202: {
        content: never
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description No running migration found with migration id */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Starts an adjudications migration
   * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_ADJUDICATIONS</b>
   */
  migrateAdjudications: {
    requestBody: {
      content: {
        'application/json': components['schemas']['AdjudicationsMigrationFilter']
      }
    }
    responses: {
      /** @description Migration process started */
      202: {
        content: {
          'application/json': components['schemas']['MigrationContextAdjudicationsMigrationFilter']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to start migration */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Cancels a running migration. The actual cancellation might take several minutes to complete
   * @description Requires role <b>MIGRATE_ACTIVITIES</b>
   */
  cancel_6: {
    parameters: {
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
    }
    responses: {
      /** @description Cancellation request accepted */
      202: {
        content: never
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description No running migration found with migration id */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Starts an activities migration
   * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_ACTIVITIES</b>
   */
  migrateActivities: {
    requestBody: {
      content: {
        'application/json': components['schemas']['ActivitiesMigrationFilter']
      }
    }
    responses: {
      /** @description Migration process started */
      202: {
        content: {
          'application/json': components['schemas']['MigrationContextActivitiesMigrationFilter']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to start migration */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getDlqMessages: {
    parameters: {
      query?: {
        maxMessages?: number
      }
      path: {
        dlqName: string
      }
    }
    responses: {
      /** @description OK */
      200: {
        content: {
          '*/*': components['schemas']['GetDlqResult']
        }
      }
    }
  }
  /**
   * get visit room usage and mappings by filter
   * @description Retrieves a list of rooms with usage count and vsip mapping for the (filtered) visits
   */
  getVisitRoomUsageDetailsByFilter: {
    parameters: {
      query?: {
        /**
         * @description Filter results by prison ids (returns all prisons if not specified)
         * @example ['MDI','LEI']
         */
        prisonIds?: string[]
        /**
         * @description Filter results by visitType (returns all types if not specified)
         * @example ['SCON','OFFI']
         */
        visitTypes?: string[]
        /**
         * @description Filter results by visits that start on or after the given timestamp
         * @example 2021-11-03T09:00:00
         */
        fromDateTime?: string
        /**
         * @description Filter results by visits that start on or before the given timestamp
         * @example 2021-11-03T09:00:00
         */
        toDateTime?: string
      }
    }
    responses: {
      /** @description list of visit room and count is returned */
      200: {
        content: {
          'application/json': components['schemas']['VisitRoomUsageResponse'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to start migration */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Gets a specific migration history record
   * @description Requires role <b>MIGRATE_VISITS</b>
   */
  get: {
    parameters: {
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
    }
    responses: {
      /** @description The visit migration history record */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Lists all filtered migration history records un-paged for visits
   * @description The records are un-paged and requires role <b>MIGRATE_VISITS</b>
   */
  getAll: {
    parameters: {
      query?: {
        /**
         * @description Only include migrations started after this date time
         * @example 2020-03-23T12:00:00
         */
        fromDateTime?: string
        /**
         * @description Only include migrations started before this date time
         * @example 2020-03-24T12:00:00
         */
        toDateTime?: string
        /**
         * @description When true only include migrations that had at least one failure
         * @example false
         */
        includeOnlyFailures?: boolean
        /**
         * @description Specify the prison associated with the migration
         * @example HEI
         */
        prisonId?: string
      }
    }
    responses: {
      /** @description All visit migration history records */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Gets active/currently running migration data, using migration record and migration queues
   * @description Requires role <b>MIGRATE_VISITS</b>
   */
  getActiveMigrationDetails: {
    responses: {
      /** @description Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Gets a specific migration history record
   * @description Requires role <b>MIGRATE_SENTENCING</b>
   */
  get_1: {
    parameters: {
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
    }
    responses: {
      /** @description The sentencing migration history record */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Lists all filtered migration history records un-paged for sentencing
   * @description The records are un-paged and requires role <b>MIGRATE_SENTENCING</b>
   */
  getAll_1: {
    parameters: {
      query?: {
        /**
         * @description Only include migrations started after this date time
         * @example 2020-03-23T12:00:00
         */
        fromDateTime?: string
        /**
         * @description Only include migrations started before this date time
         * @example 2020-03-24T12:00:00
         */
        toDateTime?: string
        /**
         * @description When true only include migrations that had at least one failure
         * @example false
         */
        includeOnlyFailures?: boolean
      }
    }
    responses: {
      /** @description All sentencing migration history records */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Gets active/currently running migration data, using migration record and migration queues
   * @description Requires role <b>MIGRATE_SENTENCING</b>
   */
  getActiveMigrationDetails_1: {
    responses: {
      /** @description Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Gets a specific migration history record
   * @description Requires role <b>MIGRATE_INCIDENTS</b>
   */
  get_2: {
    parameters: {
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
    }
    responses: {
      /** @description The migration history record */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Lists all filtered migration history records un-paged for incidents
   * @description The records are un-paged and requires role <b>MIGRATE_INCIDENTS</b>
   */
  getAll_2: {
    parameters: {
      query?: {
        /**
         * @description Only include migrations started after this date time
         * @example 2020-03-23T12:00:00
         */
        fromDateTime?: string
        /**
         * @description Only include migrations started before this date time
         * @example 2020-03-24T12:00:00
         */
        toDateTime?: string
        /**
         * @description When true only include migrations that had at least one failure
         * @example false
         */
        includeOnlyFailures?: boolean
      }
    }
    responses: {
      /** @description All migration history records */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Gets active/currently running migration data, using migration record and migration queues
   * @description Requires role <b>MIGRATE_INCIDENTS</b>
   */
  getActiveMigrationDetails_2: {
    responses: {
      /** @description Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Gets a specific migration history record
   * @description Requires role <b>MIGRATE_APPOINTMENTS</b>
   */
  get_3: {
    parameters: {
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
    }
    responses: {
      /** @description The migration history record */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Lists all filtered migration history records un-paged for appointments
   * @description The records are un-paged and requires role <b>MIGRATE_APPOINTMENTS</b>
   */
  getAll_3: {
    parameters: {
      query?: {
        /**
         * @description Only include migrations started after this date time
         * @example 2020-03-23T12:00:00
         */
        fromDateTime?: string
        /**
         * @description Only include migrations started before this date time
         * @example 2020-03-24T12:00:00
         */
        toDateTime?: string
        /**
         * @description When true only include migrations that had at least one failure
         * @example false
         */
        includeOnlyFailures?: boolean
      }
    }
    responses: {
      /** @description All migration history records */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Gets active/currently running migration data, using migration record and migration queues
   * @description Requires role <b>MIGRATE_APPOINTMENTS</b>
   */
  getActiveMigrationDetails_3: {
    responses: {
      /** @description Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Gets a specific migration history record
   * @description Requires role <b>MIGRATE_ACTIVITIES</b>
   */
  get_4: {
    parameters: {
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
    }
    responses: {
      /** @description The migration history record */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Lists all filtered migration history records un-paged for allocations
   * @description The records are un-paged and requires role <b>MIGRATE_ACTIVITIES</b>
   */
  getAll_4: {
    parameters: {
      query?: {
        /**
         * @description Only include migrations started after this date time
         * @example 2020-03-23T12:00:00
         */
        fromDateTime?: string
        /**
         * @description Only include migrations started before this date time
         * @example 2020-03-24T12:00:00
         */
        toDateTime?: string
        /**
         * @description When true only include migrations that had at least one failure
         * @example false
         */
        includeOnlyFailures?: boolean
      }
    }
    responses: {
      /** @description All migration history records */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Gets active/currently running migration data, using migration record and migration queues
   * @description Requires role <b>MIGRATE_ACTIVITIES</b>
   */
  getActiveMigrationDetails_4: {
    responses: {
      /** @description Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Gets a specific migration history record
   * @description Requires role <b>MIGRATE_ADJUDICATIONS</b>
   */
  get_5: {
    parameters: {
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
    }
    responses: {
      /** @description The migration history record */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Lists all filtered migration history records un-paged for adjudications
   * @description The records are un-paged and requires role <b>MIGRATE_ADJUDICATIONS</b>
   */
  getAll_5: {
    parameters: {
      query?: {
        /**
         * @description Only include migrations started after this date time
         * @example 2020-03-23T12:00:00
         */
        fromDateTime?: string
        /**
         * @description Only include migrations started before this date time
         * @example 2020-03-24T12:00:00
         */
        toDateTime?: string
        /**
         * @description When true only include migrations that had at least one failure
         * @example false
         */
        includeOnlyFailures?: boolean
      }
    }
    responses: {
      /** @description All migration history records */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Gets active/currently running migration data, using migration record and migration queues
   * @description Requires role <b>MIGRATE_ADJUDICATIONS</b>
   */
  getActiveMigrationDetails_5: {
    responses: {
      /** @description Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Gets a specific migration history record
   * @description Requires role <b>MIGRATE_ACTIVITIES</b>
   */
  get_6: {
    parameters: {
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
    }
    responses: {
      /** @description The migration history record */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Lists all filtered migration history records un-paged for activities
   * @description The records are un-paged and requires role <b>MIGRATE_ACTIVITIES</b>
   */
  getAll_6: {
    parameters: {
      query?: {
        /**
         * @description Only include migrations started after this date time
         * @example 2020-03-23T12:00:00
         */
        fromDateTime?: string
        /**
         * @description Only include migrations started before this date time
         * @example 2020-03-24T12:00:00
         */
        toDateTime?: string
        /**
         * @description When true only include migrations that had at least one failure
         * @example false
         */
        includeOnlyFailures?: boolean
      }
    }
    responses: {
      /** @description All migration history records */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Gets active/currently running migration data, using migration record and migration queues
   * @description Requires role <b>MIGRATE_ACTIVITIES</b>
   */
  getActiveMigrationDetails_6: {
    responses: {
      /** @description Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Lists all filtered migration history
   * @description The records are un-paged and requires role <b>MIGRATION_ADMIN</b>
   */
  getAll_7: {
    parameters: {
      query?: {
        /**
         * @description List of migration types, when omitted all migration types will be returned
         * @example VISITS
         */
        migrationTypes?: string[]
        /**
         * @description Only include migrations started after this date time
         * @example 2020-03-23T12:00:00
         */
        fromDateTime?: string
        /**
         * @description Only include migrations started before this date time
         * @example 2020-03-24T12:00:00
         */
        toDateTime?: string
        /**
         * @description When true only include migrations that had at least one failure
         * @example false
         */
        includeOnlyFailures?: boolean
        /**
         * @description Specify a word of phrase that will appear in the filter related to the migration
         * @example HEI
         */
        filterContains?: string
      }
    }
    responses: {
      /** @description All history records */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Deletes all migration history records
   * @description This is only required for test environments and requires role <b>MIGRATION_ADMIN</b>
   */
  deleteAll: {
    responses: {
      /** @description All history records deleted */
      204: {
        content: never
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
}
