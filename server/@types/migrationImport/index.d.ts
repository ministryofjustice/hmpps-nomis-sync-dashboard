/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/queue-admin/retry-dlq/{dlqName}': {
    put: operations['retryDlq']
  }
  '/queue-admin/retry-all-dlqs': {
    put: operations['retryAllDlqs']
  }
  '/queue-admin/purge-queue/{queueName}': {
    put: operations['purgeQueue']
  }
  '/migrate/activities/{migrationId}/end': {
    /** Get all NOMIS activities migrated on a migrationId and ends them all. Requires role MIGRATE_ACTIVITIES */
    put: operations['endMigratedActivities']
  }
  '/incidents/reports/reconciliation': {
    put: operations['incidentsReconciliation']
  }
  '/prisoners/{offenderNo}/alerts/resynchronise': {
    /** Used when unexpected event has happened in NOMIS that as resulted in the DPS data drifting from NOMIS, so emergency use only. Requires ROLE_MIGRATE_ALERTS */
    post: operations['repairAlerts']
  }
  '/prisoners/booking-id/{bookingId}/merge/sentencing-adjustments/repair': {
    /** Used when a merge has not be detected so new adjustments have not been copied to DPS, so emergency use only. Requires ROLE_MIGRATE_SENTENCING */
    post: operations['repairPostMergeAdjustments']
  }
  '/migrate/visits/{migrationId}/cancel': {
    /** Requires role <b>MIGRATE_VISITS</b> */
    post: operations['cancel']
  }
  '/migrate/visits': {
    /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_VISITS</b> */
    post: operations['migrateVisits']
  }
  '/migrate/sentencing/{migrationId}/cancel': {
    /** Requires role <b>MIGRATE_SENTENCING</b> */
    post: operations['cancel_1']
  }
  '/migrate/sentencing': {
    /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_SENTENCING</b> */
    post: operations['migrateSentencing']
  }
  '/migrate/prisonperson/{migrationId}/cancel': {
    /** Requires role <b>MIGRATE_PRISONPERSON</b> */
    post: operations['cancel_2']
  }
  '/migrate/prisonperson/physical-attributes': {
    /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_PRISONPERSON</b> */
    post: operations['migratePhysicalAttributes']
  }
  '/migrate/locations/{migrationId}/cancel': {
    /** Requires role <b>MIGRATE_LOCATIONS</b> */
    post: operations['cancel_3']
  }
  '/migrate/locations': {
    /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_LOCATIONS</b> */
    post: operations['migrateLocations']
  }
  '/migrate/incidents/{migrationId}/cancel': {
    /** Requires role <b>MIGRATE_INCIDENT_REPORTS</b> */
    post: operations['cancel_4']
  }
  '/migrate/incidents': {
    /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_INCIDENT_REPORTS</b> */
    post: operations['migrateIncidents']
  }
  '/migrate/csip/{migrationId}/cancel': {
    /** Requires role <b>MIGRATE_CSIP</b> */
    post: operations['cancel_5']
  }
  '/migrate/csip': {
    /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_CSIP</b> */
    post: operations['migrateCSIP']
  }
  '/migrate/court-sentencing/{migrationId}/cancel': {
    /** Requires role <b>MIGRATE_COURT_SENTENCING</b> */
    post: operations['cancel_6']
  }
  '/migrate/court-sentencing': {
    /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_COURT_SENTENCING</b> */
    post: operations['migrateCourtSentencing']
  }
  '/migrate/casenotes/{migrationId}/cancel': {
    /** Requires role <b>MIGRATE_CASENOTES</b> */
    post: operations['cancel_7']
  }
  '/migrate/casenotes': {
    /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_CASENOTES</b> */
    post: operations['migrateCaseNotes']
  }
  '/migrate/appointments/{migrationId}/cancel': {
    /** Requires role <b>MIGRATE_APPOINTMENTS</b> */
    post: operations['cancel_8']
  }
  '/migrate/appointments': {
    /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_APPOINTMENTS</b> */
    post: operations['migrateAppointments']
  }
  '/migrate/allocations/{migrationId}/cancel': {
    /** Requires role <b>MIGRATE_ACTIVITIES</b> */
    post: operations['cancel_9']
  }
  '/migrate/allocations': {
    /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_ACTIVITIES</b> */
    post: operations['migrateAllocations']
  }
  '/migrate/alerts/{migrationId}/cancel': {
    /** Requires role <b>MIGRATE_ALERTS</b> */
    post: operations['cancel_10']
  }
  '/migrate/alerts': {
    /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_ALERTS</b> */
    post: operations['migrateAlerts']
  }
  '/migrate/adjudications/{migrationId}/cancel': {
    /** Requires role <b>MIGRATE_ADJUDICATIONS</b> */
    post: operations['cancel_11']
  }
  '/migrate/adjudications': {
    /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_ADJUDICATIONS</b> */
    post: operations['migrateAdjudications']
  }
  '/migrate/activities/{migrationId}/cancel': {
    /** Requires role <b>MIGRATE_ACTIVITIES</b> */
    post: operations['cancel_12']
  }
  '/migrate/activities': {
    /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_ACTIVITIES</b> */
    post: operations['migrateActivities']
  }
  '/locations/id/{internalLocationId}/repair': {
    /** Used when a domain event adjudication.punishments.updated has gone missing, so emergency use only. Requires ROLE_NOMIS_LOCATIONS */
    post: operations['repairPunishments']
  }
  '/queue-admin/get-dlq-messages/{dlqName}': {
    get: operations['getDlqMessages']
  }
  '/migrate/visits/rooms/usage': {
    /** Retrieves a list of rooms with usage count and vsip mapping for the (filtered) visits */
    get: operations['getVisitRoomUsageDetailsByFilter']
  }
  '/migrate/visits/history/{migrationId}': {
    /** Requires role <b>MIGRATE_VISITS</b> */
    get: operations['get']
  }
  '/migrate/visits/history': {
    /** The records are un-paged and requires role <b>MIGRATE_VISITS</b> */
    get: operations['getAll']
  }
  '/migrate/visits/active-migration': {
    /** Requires role <b>MIGRATE_VISITS</b> */
    get: operations['getActiveMigrationDetails']
  }
  '/migrate/sentencing/history/{migrationId}': {
    /** Requires role <b>MIGRATE_SENTENCING</b> */
    get: operations['get_1']
  }
  '/migrate/sentencing/history': {
    /** The records are un-paged and requires role <b>MIGRATE_SENTENCING</b> */
    get: operations['getAll_1']
  }
  '/migrate/sentencing/active-migration': {
    /** Requires role <b>MIGRATE_SENTENCING</b> */
    get: operations['getActiveMigrationDetails_1']
  }
  '/migrate/prisonperson/history/{migrationId}': {
    /** Requires role <b>MIGRATE_PRISONPERSON</b> */
    get: operations['get_2']
  }
  '/migrate/prisonperson/history': {
    /** The records are un-paged and requires role <b>MIGRATE_PRISONPERSON</b> */
    get: operations['getAll_2']
  }
  '/migrate/prisonperson/active-migration': {
    /** Requires role <b>MIGRATE_PRISONPERSON</b> */
    get: operations['activeMigration']
  }
  '/migrate/locations/history/{migrationId}': {
    /** Requires role <b>MIGRATE_LOCATIONS</b> */
    get: operations['get_3']
  }
  '/migrate/locations/history': {
    /** The records are un-paged and requires role <b>MIGRATE_LOCATIONS</b> */
    get: operations['getAll_3']
  }
  '/migrate/locations/active-migration': {
    /** Requires role <b>MIGRATE_LOCATIONS</b> */
    get: operations['getActiveMigrationDetails_2']
  }
  '/migrate/incidents/history/{migrationId}': {
    /** Requires role <b>MIGRATE_INCIDENT_REPORTS</b> */
    get: operations['get_4']
  }
  '/migrate/incidents/history': {
    /** The records are un-paged and requires role <b>MIGRATE_INCIDENT_REPORTS</b> */
    get: operations['getAll_4']
  }
  '/migrate/incidents/active-migration': {
    /** Requires role <b>MIGRATE_INCIDENT_REPORTS</b> */
    get: operations['getActiveMigrationDetails_3']
  }
  '/migrate/csip/history/{migrationId}': {
    /** Requires role <b>MIGRATE_CSIP</b> */
    get: operations['get_5']
  }
  '/migrate/csip/history': {
    /** The records are un-paged and requires role <b>MIGRATE_CSIP</b> */
    get: operations['getAll_5']
  }
  '/migrate/csip/active-migration': {
    /** Requires role <b>MIGRATE_CSIP</b> */
    get: operations['getActiveMigrationDetails_4']
  }
  '/migrate/court-sentencing/history/{migrationId}': {
    /** Requires role <b>MIGRATE_COURT_SENTENCING</b> */
    get: operations['get_6']
  }
  '/migrate/court-sentencing/history': {
    /** The records are un-paged and requires role <b>MIGRATE_COURT_SENTENCING</b> */
    get: operations['getAll_6']
  }
  '/migrate/court-sentencing/active-migration': {
    /** Requires role <b>MIGRATE_COURT_SENTENCING</b> */
    get: operations['getActiveMigrationDetails_5']
  }
  '/migrate/casenotes/history/{migrationId}': {
    /** Requires role <b>MIGRATE_CASENOTES</b> */
    get: operations['get_7']
  }
  '/migrate/casenotes/history': {
    /** The records are un-paged and requires role <b>MIGRATE_CASENOTES</b> */
    get: operations['getAll_7']
  }
  '/migrate/casenotes/active-migration': {
    /** Requires role <b>MIGRATE_CASENOTES</b> */
    get: operations['getActiveMigrationDetails_6']
  }
  '/migrate/appointments/history/{migrationId}': {
    /** Requires role <b>MIGRATE_APPOINTMENTS</b> */
    get: operations['get_8']
  }
  '/migrate/appointments/history': {
    /** The records are un-paged and requires role <b>MIGRATE_APPOINTMENTS</b> */
    get: operations['getAll_8']
  }
  '/migrate/appointments/active-migration': {
    /** Requires role <b>MIGRATE_APPOINTMENTS</b> */
    get: operations['getActiveMigrationDetails_7']
  }
  '/migrate/allocations/history/{migrationId}': {
    /** Requires role <b>MIGRATE_ACTIVITIES</b> */
    get: operations['get_9']
  }
  '/migrate/allocations/history': {
    /** The records are un-paged and requires role <b>MIGRATE_ACTIVITIES</b> */
    get: operations['getAll_9']
  }
  '/migrate/allocations/active-migration': {
    /** Requires role <b>MIGRATE_ACTIVITIES</b> */
    get: operations['getActiveMigrationDetails_8']
  }
  '/migrate/alerts/history/{migrationId}': {
    /** Requires role <b>MIGRATE_ALERTS</b> */
    get: operations['get_10']
  }
  '/migrate/alerts/history': {
    /** The records are un-paged and requires role <b>MIGRATE_ALERTS</b> */
    get: operations['getAll_10']
  }
  '/migrate/alerts/active-migration': {
    /** Requires role <b>MIGRATE_ALERTS</b> */
    get: operations['getActiveMigrationDetails_9']
  }
  '/migrate/adjudications/history/{migrationId}': {
    /** Requires role <b>MIGRATE_ADJUDICATIONS</b> */
    get: operations['get_11']
  }
  '/migrate/adjudications/history': {
    /** The records are un-paged and requires role <b>MIGRATE_ADJUDICATIONS</b> */
    get: operations['getAll_11']
  }
  '/migrate/adjudications/active-migration': {
    /** Requires role <b>MIGRATE_ADJUDICATIONS</b> */
    get: operations['getActiveMigrationDetails_10']
  }
  '/migrate/activities/history/{migrationId}': {
    /** Requires role <b>MIGRATE_ACTIVITIES</b> */
    get: operations['get_12']
  }
  '/migrate/activities/history': {
    /** The records are un-paged and requires role <b>MIGRATE_ACTIVITIES</b> */
    get: operations['getAll_12']
  }
  '/migrate/activities/active-migration': {
    /** Requires role <b>MIGRATE_ACTIVITIES</b> */
    get: operations['getActiveMigrationDetails_11']
  }
  '/history': {
    /** The records are un-paged and requires role <b>MIGRATION_ADMIN</b> */
    get: operations['getAll_13']
    /** This is only required for test environments and requires role <b>MIGRATION_ADMIN</b> */
    delete: operations['deleteAll']
  }
}

export interface components {
  schemas: {
    RetryDlqResult: {
      /** Format: int32 */
      messagesFoundCount: number
    }
    PurgeQueueResult: {
      /** Format: int32 */
      messagesFoundCount: number
    }
    ErrorResponse: {
      /** Format: int32 */
      status: number
      /** Format: int32 */
      errorCode?: number
      userMessage?: string
      developerMessage?: string
      moreInfo?: string
    }
    /** @description Filter specifying what should be migrated from NOMIS to Visits service */
    VisitsMigrationFilter: {
      /**
       * @description List of prison Ids (AKA Agency Ids) to migrate visits from
       * @example MDI
       */
      prisonIds: string[]
      /**
       * @description List of visit types to migrate
       * @default [
       *   "SCON"
       * ]
       * @example [
       *   "SCON",
       *   "OFFI"
       * ]
       */
      visitTypes?: string[]
      /**
       * @description Only include visits created after this date. NB this is creation date not the actual visit date
       * @example 2021-07-05T10:35:17
       */
      fromDateTime?: string
      /**
       * @description Only include visits created before this date. NB this is creation date not the actual visit date
       * @example 2021-07-05T10:35:17
       */
      toDateTime?: string
      /**
       * @description When true exclude visits without an associated room (visits created during the VSIP synchronisation process), defaults to false. Only required during testing when mapping records are manually deleted
       * @default false
       * @example false
       */
      ignoreMissingRoom?: boolean
    }
    MigrationContextVisitsMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'APPOINTMENTS'
        | 'ADJUDICATIONS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'INCIDENTS'
        | 'CSIP'
        | 'LOCATIONS'
        | 'CASENOTES'
        | 'ALERTS'
        | 'PRISONPERSON'
        | 'COURT_SENTENCING'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['VisitsMigrationFilter']
    }
    /** @description Filter specifying what should be migrated from NOMIS to Sentencing service */
    SentencingMigrationFilter: {
      /**
       * Format: date
       * @description Only include Sentencing entity issued on or after this date
       * @example 2020-03-23
       */
      fromDate?: string
      /**
       * Format: date
       * @description Only include Sentencing entity issued before or on this date
       * @example 2020-03-24
       */
      toDate?: string
    }
    MigrationContextSentencingMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'APPOINTMENTS'
        | 'ADJUDICATIONS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'INCIDENTS'
        | 'CSIP'
        | 'LOCATIONS'
        | 'CASENOTES'
        | 'ALERTS'
        | 'PRISONPERSON'
        | 'COURT_SENTENCING'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['SentencingMigrationFilter']
    }
    /** @description Filter specifying what should be migrated from NOMIS to DPS */
    PrisonPersonMigrationFilter: {
      /**
       * @description Only migrate a single prisoner - used for testing
       * @example A1234BC
       */
      prisonerNumber?: string
    }
    MigrationContextPrisonPersonMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'APPOINTMENTS'
        | 'ADJUDICATIONS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'INCIDENTS'
        | 'CSIP'
        | 'LOCATIONS'
        | 'CASENOTES'
        | 'ALERTS'
        | 'PRISONPERSON'
        | 'COURT_SENTENCING'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['PrisonPersonMigrationFilter']
    }
    /** @description Filter specifying what should be migrated from NOMIS to the Locations service */
    LocationsMigrationFilter: {
      /**
       * Format: date
       * @description Only include locations created on or after this date
       * @example 2020-03-23
       */
      fromDate?: string
      /**
       * Format: date
       * @description Only include locations created before or on this date
       * @example 2020-03-24
       */
      toDate?: string
    }
    MigrationContextLocationsMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'APPOINTMENTS'
        | 'ADJUDICATIONS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'INCIDENTS'
        | 'CSIP'
        | 'LOCATIONS'
        | 'CASENOTES'
        | 'ALERTS'
        | 'PRISONPERSON'
        | 'COURT_SENTENCING'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['LocationsMigrationFilter']
    }
    /** @description Filter specifying what should be migrated from NOMIS to the Incident Reporting service */
    IncidentsMigrationFilter: {
      /**
       * Format: date
       * @description Only include incidents created on or after this date
       * @example 2020-03-23
       */
      fromDate?: string
      /**
       * Format: date
       * @description Only include incidents created before or on this date
       * @example 2020-03-24
       */
      toDate?: string
    }
    MigrationContextIncidentsMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'APPOINTMENTS'
        | 'ADJUDICATIONS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'INCIDENTS'
        | 'CSIP'
        | 'LOCATIONS'
        | 'CASENOTES'
        | 'ALERTS'
        | 'PRISONPERSON'
        | 'COURT_SENTENCING'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['IncidentsMigrationFilter']
    }
    /** @description Filter specifying what should be migrated from NOMIS to the CSIP Reporting service */
    CSIPMigrationFilter: {
      /**
       * Format: date
       * @description Only include csip created on or after this date
       * @example 2020-03-23
       */
      fromDate?: string
      /**
       * Format: date
       * @description Only include csip created before or on this date
       * @example 2020-03-24
       */
      toDate?: string
    }
    MigrationContextCSIPMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'APPOINTMENTS'
        | 'ADJUDICATIONS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'INCIDENTS'
        | 'CSIP'
        | 'LOCATIONS'
        | 'CASENOTES'
        | 'ALERTS'
        | 'PRISONPERSON'
        | 'COURT_SENTENCING'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['CSIPMigrationFilter']
    }
    /** @description Filter specifying what should be migrated from NOMIS to DPS */
    CourtSentencingMigrationFilter: {
      /**
       * Format: date
       * @description Only include court cases created on or after this date
       * @example 2020-03-23
       */
      fromDate?: string
      /**
       * Format: date
       * @description Only include court cases created before or on this date
       * @example 2020-03-24
       */
      toDate?: string
    }
    MigrationContextCourtSentencingMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'APPOINTMENTS'
        | 'ADJUDICATIONS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'INCIDENTS'
        | 'CSIP'
        | 'LOCATIONS'
        | 'CASENOTES'
        | 'ALERTS'
        | 'PRISONPERSON'
        | 'COURT_SENTENCING'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['CourtSentencingMigrationFilter']
    }
    /** @description Filter specifying what should be migrated from NOMIS to the Case notes service */
    CaseNotesMigrationFilter: {
      /**
       * @description Only include casenotes of these specific prisoners
       * @example A1234AA,B1234BB
       */
      offenderNos?: string[]
    }
    MigrationContext: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'APPOINTMENTS'
        | 'ADJUDICATIONS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'INCIDENTS'
        | 'CSIP'
        | 'LOCATIONS'
        | 'CASENOTES'
        | 'ALERTS'
        | 'PRISONPERSON'
        | 'COURT_SENTENCING'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: { [key: string]: unknown }
    }
    /** @description Filter specifying what should be migrated from NOMIS to Appointments service */
    AppointmentsMigrationFilter: {
      /**
       * Format: date
       * @description Only include appointments on or after this date
       * @example 2020-03-23
       */
      fromDate?: string
      /**
       * Format: date
       * @description Only include appointments before or on this date
       * @example 2020-03-24
       */
      toDate?: string
      /**
       * @description Only include appointments for these prison ids
       * @example ['MDI','LEI']
       */
      prisonIds: string[]
    }
    MigrationContextAppointmentsMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'APPOINTMENTS'
        | 'ADJUDICATIONS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'INCIDENTS'
        | 'CSIP'
        | 'LOCATIONS'
        | 'CASENOTES'
        | 'ALERTS'
        | 'PRISONPERSON'
        | 'COURT_SENTENCING'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['AppointmentsMigrationFilter']
    }
    /** @description Filter specifying which allocations should be migrated from NOMIS to DPS service */
    AllocationsMigrationFilter: {
      /**
       * @description Only include allocations for this prison id
       * @example MDI
       */
      prisonId: string
      /**
       * Format: int64
       * @description Only include allocations from a single course activity
       * @example 12345
       */
      courseActivityId?: number
    }
    MigrationContextAllocationsMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'APPOINTMENTS'
        | 'ADJUDICATIONS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'INCIDENTS'
        | 'CSIP'
        | 'LOCATIONS'
        | 'CASENOTES'
        | 'ALERTS'
        | 'PRISONPERSON'
        | 'COURT_SENTENCING'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['AllocationsMigrationFilter']
    }
    /** @description Filter specifying what should be migrated from NOMIS to DPS */
    AlertsMigrationFilter: {
      /**
       * Format: date
       * @description Only include Alerts created on or after this date
       * @example 2020-03-23
       */
      fromDate?: string
      /**
       * Format: date
       * @description Only include Alerts created before or on this date
       * @example 2020-03-24
       */
      toDate?: string
    }
    /** @description Filter specifying what should be migrated from NOMIS to the Adjudications service */
    AdjudicationsMigrationFilter: {
      /**
       * Format: date
       * @description Only include adjudications created on or after this date
       * @example 2020-03-23
       */
      fromDate?: string
      /**
       * Format: date
       * @description Only include adjudications created before or on this date
       * @example 2020-03-24
       */
      toDate?: string
      /**
       * @description Only include adjudications for these prison ids
       * @example ['MDI','LEI']
       */
      prisonIds: string[]
    }
    MigrationContextAdjudicationsMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'APPOINTMENTS'
        | 'ADJUDICATIONS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'INCIDENTS'
        | 'CSIP'
        | 'LOCATIONS'
        | 'CASENOTES'
        | 'ALERTS'
        | 'PRISONPERSON'
        | 'COURT_SENTENCING'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['AdjudicationsMigrationFilter']
    }
    /** @description Filter specifying which activities should be migrated from NOMIS to DPS service */
    ActivitiesMigrationFilter: {
      /**
       * @description Only include activities for this prison id
       * @example MDI
       */
      prisonId: string
      /**
       * Format: int64
       * @description Only include a single course activity
       * @example 12345
       */
      courseActivityId?: number
    }
    MigrationContextActivitiesMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'APPOINTMENTS'
        | 'ADJUDICATIONS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'INCIDENTS'
        | 'CSIP'
        | 'LOCATIONS'
        | 'CASENOTES'
        | 'ALERTS'
        | 'PRISONPERSON'
        | 'COURT_SENTENCING'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['ActivitiesMigrationFilter']
    }
    DlqMessage: {
      body: { [key: string]: { [key: string]: unknown } }
      messageId: string
    }
    GetDlqResult: {
      /** Format: int32 */
      messagesFoundCount: number
      /** Format: int32 */
      messagesReturnedCount: number
      messages: components['schemas']['DlqMessage'][]
    }
    /** @description Visit room usage and vsip mapping */
    VisitRoomUsageResponse: {
      /** @description The nomis internal location description */
      agencyInternalLocationDescription: string
      /**
       * Format: int64
       * @description room usage count
       */
      count: number
      /** @description VSIP room mapping */
      vsipRoom?: string
      /** @description The nomis prison id */
      prisonId: string
    }
    MigrationHistory: {
      migrationId: string
      /** @example 2021-07-05T10:35:17 */
      whenStarted: string
      /** @example 2021-07-05T10:35:17 */
      whenEnded?: string
      /** Format: int64 */
      estimatedRecordCount: number
      filter?: string
      /** Format: int64 */
      recordsMigrated: number
      /** Format: int64 */
      recordsFailed: number
      /** @enum {string} */
      migrationType:
        | 'VISITS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'APPOINTMENTS'
        | 'ADJUDICATIONS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'INCIDENTS'
        | 'CSIP'
        | 'LOCATIONS'
        | 'CASENOTES'
        | 'ALERTS'
        | 'PRISONPERSON'
        | 'COURT_SENTENCING'
      /** @enum {string} */
      status: 'STARTED' | 'COMPLETED' | 'CANCELLED_REQUESTED' | 'CANCELLED'
      id: string
      isNew: boolean
    }
    InProgressMigration: {
      /** Format: int64 */
      recordsMigrated?: number
      /** Format: int32 */
      toBeProcessedCount?: number
      /** Format: int32 */
      beingProcessedCount?: number
      /** Format: int32 */
      recordsFailed?: number
      migrationId?: string
      /** @example 2021-07-05T10:35:17 */
      whenStarted?: string
      /** Format: int64 */
      estimatedRecordCount?: number
      /** @enum {string} */
      migrationType?:
        | 'VISITS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'APPOINTMENTS'
        | 'ADJUDICATIONS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'INCIDENTS'
        | 'CSIP'
        | 'LOCATIONS'
        | 'CASENOTES'
        | 'ALERTS'
        | 'PRISONPERSON'
        | 'COURT_SENTENCING'
      /** @enum {string} */
      status?: 'STARTED' | 'COMPLETED' | 'CANCELLED_REQUESTED' | 'CANCELLED'
    }
  }
}

export interface operations {
  retryDlq: {
    parameters: {
      path: {
        dlqName: string
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['RetryDlqResult']
        }
      }
    }
  }
  retryAllDlqs: {
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['RetryDlqResult'][]
        }
      }
    }
  }
  purgeQueue: {
    parameters: {
      path: {
        queueName: string
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['PurgeQueueResult']
        }
      }
    }
  }
  /** Get all NOMIS activities migrated on a migrationId and ends them all. Requires role MIGRATE_ACTIVITIES */
  endMigratedActivities: {
    parameters: {
      path: {
        /** Migration ID */
        migrationId: string
      }
    }
    responses: {
      /** OK */
      200: unknown
      /** Invalid request */
      400: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Forbidden, requires role NOMIS_ACTIVITIES */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  incidentsReconciliation: {
    responses: {
      /** Accepted */
      202: unknown
    }
  }
  /** Used when unexpected event has happened in NOMIS that as resulted in the DPS data drifting from NOMIS, so emergency use only. Requires ROLE_MIGRATE_ALERTS */
  repairAlerts: {
    parameters: {
      path: {
        offenderNo: string
      }
    }
    responses: {
      /** OK */
      200: unknown
    }
  }
  /** Used when a merge has not be detected so new adjustments have not been copied to DPS, so emergency use only. Requires ROLE_MIGRATE_SENTENCING */
  repairPostMergeAdjustments: {
    parameters: {
      path: {
        bookingId: number
      }
    }
    responses: {
      /** OK */
      200: unknown
    }
  }
  /** Requires role <b>MIGRATE_VISITS</b> */
  cancel: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** Cancellation request accepted */
      202: unknown
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** No running migration found with migration id */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_VISITS</b> */
  migrateVisits: {
    responses: {
      /** Migration process started */
      202: {
        content: {
          'application/json': components['schemas']['MigrationContextVisitsMigrationFilter']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to start migration */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['VisitsMigrationFilter']
      }
    }
  }
  /** Requires role <b>MIGRATE_SENTENCING</b> */
  cancel_1: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** Cancellation request accepted */
      202: unknown
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** No running migration found with migration id */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_SENTENCING</b> */
  migrateSentencing: {
    responses: {
      /** Migration process started */
      202: {
        content: {
          'application/json': components['schemas']['MigrationContextSentencingMigrationFilter']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to start migration */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['SentencingMigrationFilter']
      }
    }
  }
  /** Requires role <b>MIGRATE_PRISONPERSON</b> */
  cancel_2: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** Cancellation request accepted */
      202: unknown
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Migration not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_PRISONPERSON</b> */
  migratePhysicalAttributes: {
    responses: {
      /** Migration process started */
      202: {
        content: {
          'application/json': components['schemas']['MigrationContextPrisonPersonMigrationFilter']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to start migration */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PrisonPersonMigrationFilter']
      }
    }
  }
  /** Requires role <b>MIGRATE_LOCATIONS</b> */
  cancel_3: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** Cancellation request accepted */
      202: unknown
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** No running migration found with migration id */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_LOCATIONS</b> */
  migrateLocations: {
    responses: {
      /** Migration process started */
      202: {
        content: {
          'application/json': components['schemas']['MigrationContextLocationsMigrationFilter']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to start migration */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['LocationsMigrationFilter']
      }
    }
  }
  /** Requires role <b>MIGRATE_INCIDENT_REPORTS</b> */
  cancel_4: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** Cancellation request accepted */
      202: unknown
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** No running migration found with migration id */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_INCIDENT_REPORTS</b> */
  migrateIncidents: {
    responses: {
      /** Migration process started */
      202: {
        content: {
          'application/json': components['schemas']['MigrationContextIncidentsMigrationFilter']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to start migration */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['IncidentsMigrationFilter']
      }
    }
  }
  /** Requires role <b>MIGRATE_CSIP</b> */
  cancel_5: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** Cancellation request accepted */
      202: unknown
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** No running migration found with migration id */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_CSIP</b> */
  migrateCSIP: {
    responses: {
      /** Migration process started */
      202: {
        content: {
          'application/json': components['schemas']['MigrationContextCSIPMigrationFilter']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to start migration */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CSIPMigrationFilter']
      }
    }
  }
  /** Requires role <b>MIGRATE_COURT_SENTENCING</b> */
  cancel_6: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** Cancellation request accepted */
      202: unknown
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** No running migration found with migration id */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_COURT_SENTENCING</b> */
  migrateCourtSentencing: {
    responses: {
      /** Migration process started */
      202: {
        content: {
          'application/json': components['schemas']['MigrationContextCourtSentencingMigrationFilter']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to start migration */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CourtSentencingMigrationFilter']
      }
    }
  }
  /** Requires role <b>MIGRATE_CASENOTES</b> */
  cancel_7: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** Cancellation request accepted */
      202: unknown
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** No running migration found with migration id */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_CASENOTES</b> */
  migrateCaseNotes: {
    responses: {
      /** Migration process started */
      202: {
        content: {
          'application/json': components['schemas']['MigrationContext']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to start migration */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CaseNotesMigrationFilter']
      }
    }
  }
  /** Requires role <b>MIGRATE_APPOINTMENTS</b> */
  cancel_8: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** Cancellation request accepted */
      202: unknown
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** No running migration found with migration id */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_APPOINTMENTS</b> */
  migrateAppointments: {
    responses: {
      /** Migration process started */
      202: {
        content: {
          'application/json': components['schemas']['MigrationContextAppointmentsMigrationFilter']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to start migration */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AppointmentsMigrationFilter']
      }
    }
  }
  /** Requires role <b>MIGRATE_ACTIVITIES</b> */
  cancel_9: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** Cancellation request accepted */
      202: unknown
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** No running migration found with migration id */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_ACTIVITIES</b> */
  migrateAllocations: {
    responses: {
      /** Migration process started */
      202: {
        content: {
          'application/json': components['schemas']['MigrationContextAllocationsMigrationFilter']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to start migration */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AllocationsMigrationFilter']
      }
    }
  }
  /** Requires role <b>MIGRATE_ALERTS</b> */
  cancel_10: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** Cancellation request accepted */
      202: unknown
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** No running migration found with migration id */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_ALERTS</b> */
  migrateAlerts: {
    responses: {
      /** Migration process started */
      202: {
        content: {
          'application/json': components['schemas']['MigrationContext']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to start migration */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AlertsMigrationFilter']
      }
    }
  }
  /** Requires role <b>MIGRATE_ADJUDICATIONS</b> */
  cancel_11: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** Cancellation request accepted */
      202: unknown
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** No running migration found with migration id */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_ADJUDICATIONS</b> */
  migrateAdjudications: {
    responses: {
      /** Migration process started */
      202: {
        content: {
          'application/json': components['schemas']['MigrationContextAdjudicationsMigrationFilter']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to start migration */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AdjudicationsMigrationFilter']
      }
    }
  }
  /** Requires role <b>MIGRATE_ACTIVITIES</b> */
  cancel_12: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** Cancellation request accepted */
      202: unknown
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** No running migration found with migration id */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_ACTIVITIES</b> */
  migrateActivities: {
    responses: {
      /** Migration process started */
      202: {
        content: {
          'application/json': components['schemas']['MigrationContextActivitiesMigrationFilter']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to start migration */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ActivitiesMigrationFilter']
      }
    }
  }
  /** Used when a domain event adjudication.punishments.updated has gone missing, so emergency use only. Requires ROLE_NOMIS_LOCATIONS */
  repairPunishments: {
    parameters: {
      path: {
        /** Id of the location in Nomis */
        internalLocationId: string
      }
      query: {
        /** if true, record will be deleted in DPS and mapping table */
        recordDeleted?: string
      }
    }
    responses: {
      /** OK */
      200: unknown
    }
  }
  getDlqMessages: {
    parameters: {
      path: {
        dlqName: string
      }
      query: {
        maxMessages?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['GetDlqResult']
        }
      }
    }
  }
  /** Retrieves a list of rooms with usage count and vsip mapping for the (filtered) visits */
  getVisitRoomUsageDetailsByFilter: {
    parameters: {
      query: {
        /** Filter results by prison ids (returns all prisons if not specified) */
        prisonIds?: string[]
        /** Filter results by visitType (returns all types if not specified) */
        visitTypes?: string[]
        /** Filter results by visits that start on or after the given timestamp */
        fromDateTime?: string
        /** Filter results by visits that start on or before the given timestamp */
        toDateTime?: string
      }
    }
    responses: {
      /** list of visit room and count is returned */
      200: {
        content: {
          'application/json': components['schemas']['VisitRoomUsageResponse'][]
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to start migration */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_VISITS</b> */
  get: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** The visit migration history record */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Migration not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** The records are un-paged and requires role <b>MIGRATE_VISITS</b> */
  getAll: {
    parameters: {
      query: {
        /** Only include migrations started after this date time */
        fromDateTime?: string
        /** Only include migrations started before this date time */
        toDateTime?: string
        /** When true only include migrations that had at least one failure */
        includeOnlyFailures?: boolean
        /** Specify the prison associated with the migration */
        prisonId?: string
      }
    }
    responses: {
      /** All visit migration history records */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_VISITS</b> */
  getActiveMigrationDetails: {
    responses: {
      /** Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_SENTENCING</b> */
  get_1: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** The sentencing migration history record */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Migration not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** The records are un-paged and requires role <b>MIGRATE_SENTENCING</b> */
  getAll_1: {
    parameters: {
      query: {
        /** Only include migrations started after this date time */
        fromDateTime?: string
        /** Only include migrations started before this date time */
        toDateTime?: string
        /** When true only include migrations that had at least one failure */
        includeOnlyFailures?: boolean
      }
    }
    responses: {
      /** All sentencing migration history records */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_SENTENCING</b> */
  getActiveMigrationDetails_1: {
    responses: {
      /** Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_PRISONPERSON</b> */
  get_2: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** The prison person migration history record */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Migration not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** The records are un-paged and requires role <b>MIGRATE_PRISONPERSON</b> */
  getAll_2: {
    responses: {
      /** All prison person migration history records */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_PRISONPERSON</b> */
  activeMigration: {
    responses: {
      /** Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Migration not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_LOCATIONS</b> */
  get_3: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** The migration history record */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Migration not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** The records are un-paged and requires role <b>MIGRATE_LOCATIONS</b> */
  getAll_3: {
    parameters: {
      query: {
        /** Only include migrations started after this date time */
        fromDateTime?: string
        /** Only include migrations started before this date time */
        toDateTime?: string
        /** When true only include migrations that had at least one failure */
        includeOnlyFailures?: boolean
      }
    }
    responses: {
      /** All migration history records */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_LOCATIONS</b> */
  getActiveMigrationDetails_2: {
    responses: {
      /** Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_INCIDENT_REPORTS</b> */
  get_4: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** The migration history record */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Migration not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** The records are un-paged and requires role <b>MIGRATE_INCIDENT_REPORTS</b> */
  getAll_4: {
    parameters: {
      query: {
        /** Only include migrations started after this date time */
        fromDateTime?: string
        /** Only include migrations started before this date time */
        toDateTime?: string
        /** When true only include migrations that had at least one failure */
        includeOnlyFailures?: boolean
      }
    }
    responses: {
      /** All migration history records */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_INCIDENT_REPORTS</b> */
  getActiveMigrationDetails_3: {
    responses: {
      /** Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_CSIP</b> */
  get_5: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** The migration history record */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Migration not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** The records are un-paged and requires role <b>MIGRATE_CSIP</b> */
  getAll_5: {
    parameters: {
      query: {
        /** Only include migrations started after this date time */
        fromDateTime?: string
        /** Only include migrations started before this date time */
        toDateTime?: string
        /** When true only include migrations that had at least one failure */
        includeOnlyFailures?: boolean
      }
    }
    responses: {
      /** All migration history records */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_CSIP</b> */
  getActiveMigrationDetails_4: {
    responses: {
      /** Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_COURT_SENTENCING</b> */
  get_6: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** The court sentencing migration history record */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Migration not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** The records are un-paged and requires role <b>MIGRATE_COURT_SENTENCING</b> */
  getAll_6: {
    parameters: {
      query: {
        /** Only include migrations started after this date time */
        fromDateTime?: string
        /** Only include migrations started before this date time */
        toDateTime?: string
        /** When true only include migrations that had at least one failure */
        includeOnlyFailures?: boolean
      }
    }
    responses: {
      /** All court sentencing migration history records */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_COURT_SENTENCING</b> */
  getActiveMigrationDetails_5: {
    responses: {
      /** Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_CASENOTES</b> */
  get_7: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** The casenotes migration history record */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Migration not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** The records are un-paged and requires role <b>MIGRATE_CASENOTES</b> */
  getAll_7: {
    responses: {
      /** All casenotes migration history records */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_CASENOTES</b> */
  getActiveMigrationDetails_6: {
    responses: {
      /** Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_APPOINTMENTS</b> */
  get_8: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** The migration history record */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Migration not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** The records are un-paged and requires role <b>MIGRATE_APPOINTMENTS</b> */
  getAll_8: {
    parameters: {
      query: {
        /** Only include migrations started after this date time */
        fromDateTime?: string
        /** Only include migrations started before this date time */
        toDateTime?: string
        /** When true only include migrations that had at least one failure */
        includeOnlyFailures?: boolean
      }
    }
    responses: {
      /** All migration history records */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_APPOINTMENTS</b> */
  getActiveMigrationDetails_7: {
    responses: {
      /** Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_ACTIVITIES</b> */
  get_9: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** The migration history record */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Migration not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** The records are un-paged and requires role <b>MIGRATE_ACTIVITIES</b> */
  getAll_9: {
    parameters: {
      query: {
        /** Only include migrations started after this date time */
        fromDateTime?: string
        /** Only include migrations started before this date time */
        toDateTime?: string
        /** When true only include migrations that had at least one failure */
        includeOnlyFailures?: boolean
      }
    }
    responses: {
      /** All migration history records */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_ACTIVITIES</b> */
  getActiveMigrationDetails_8: {
    responses: {
      /** Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_ALERTS</b> */
  get_10: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** The alerts migration history record */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Migration not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** The records are un-paged and requires role <b>MIGRATE_ALERTS</b> */
  getAll_10: {
    responses: {
      /** All alerts migration history records */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_ALERTS</b> */
  getActiveMigrationDetails_9: {
    responses: {
      /** Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_ADJUDICATIONS</b> */
  get_11: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** The migration history record */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Migration not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** The records are un-paged and requires role <b>MIGRATE_ADJUDICATIONS</b> */
  getAll_11: {
    parameters: {
      query: {
        /** Only include migrations started after this date time */
        fromDateTime?: string
        /** Only include migrations started before this date time */
        toDateTime?: string
        /** When true only include migrations that had at least one failure */
        includeOnlyFailures?: boolean
      }
    }
    responses: {
      /** All migration history records */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_ADJUDICATIONS</b> */
  getActiveMigrationDetails_10: {
    responses: {
      /** Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_ACTIVITIES</b> */
  get_12: {
    parameters: {
      path: {
        /** Migration Id */
        migrationId: string
      }
    }
    responses: {
      /** The migration history record */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Migration not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** The records are un-paged and requires role <b>MIGRATE_ACTIVITIES</b> */
  getAll_12: {
    parameters: {
      query: {
        /** Only include migrations started after this date time */
        fromDateTime?: string
        /** Only include migrations started before this date time */
        toDateTime?: string
        /** When true only include migrations that had at least one failure */
        includeOnlyFailures?: boolean
      }
    }
    responses: {
      /** All migration history records */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** Requires role <b>MIGRATE_ACTIVITIES</b> */
  getActiveMigrationDetails_11: {
    responses: {
      /** Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** The records are un-paged and requires role <b>MIGRATION_ADMIN</b> */
  getAll_13: {
    parameters: {
      query: {
        /** List of migration types, when omitted all migration types will be returned */
        migrationTypes?: string[]
        /** Only include migrations started after this date time */
        fromDateTime?: string
        /** Only include migrations started before this date time */
        toDateTime?: string
        /** When true only include migrations that had at least one failure */
        includeOnlyFailures?: boolean
        /** Specify a word of phrase that will appear in the filter related to the migration */
        filterContains?: string
      }
    }
    responses: {
      /** All history records */
      200: {
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /** This is only required for test environments and requires role <b>MIGRATION_ADMIN</b> */
  deleteAll: {
    responses: {
      /** All history records deleted */
      204: never
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to access this endpoint */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
}
