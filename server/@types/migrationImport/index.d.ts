/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/sync/contactperson/profile-details/{prisonerNumber}/{profileType}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /**
     * Synchronises a profile detail to DPS
     * @description Manually synchronises a profile detail to DPS. This is intended for use by developers to recover from errors. Requires role <b>MIGRATE_CONTACTPERSON</b> or <b>MIGRATE_NOMIS_SYSCON/b>
     */
    put: operations['syncContactPersonProfileDetail-0E7RQCE']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/queue-admin/retry-dlq/{dlqName}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put: operations['retryDlq']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/queue-admin/retry-all-dlqs': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put: operations['retryAllDlqs']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/queue-admin/purge-queue/{queueName}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put: operations['purgeQueue']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/activities/{migrationId}/end': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /**
     * End all activities and allocations for a migration
     * @description Get all NOMIS activities migrated on a migrationId and ends them all. Requires role MIGRATE_ACTIVITIES
     */
    put: operations['endMigratedActivities']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/incidents/reports/reconciliation': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put: operations['incidentsReconciliation']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/prisoners/{offenderNo}/alerts/resynchronise': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Resynchronises current alerts for the given prisoner from NOMIS back to DPS
     * @description Used when an unexpected event has happened in NOMIS that has resulted in the DPS data drifting from NOMIS, so emergency use only. Requires ROLE_MIGRATE_ALERTS
     */
    post: operations['repairAlerts']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/prisoners/booking-id/{bookingId}/merge/sentencing-adjustments/repair': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Resynchronises new adjustments for the given booking from NOMIS back to DPS
     * @description Used when a merge has not be detected so new adjustments have not been copied to DPS, so emergency use only. Requires ROLE_MIGRATE_SENTENCING
     */
    post: operations['repairPostMergeAdjustments']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/visits/{migrationId}/cancel': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Cancels a running migration. The actual cancellation might take several minutes to complete
     * @description Requires role <b>MIGRATE_VISITS</b>
     */
    post: operations['cancel']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/visits': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Starts a visit migration
     * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_VISITS</b>
     */
    post: operations['migrateVisits']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/visit-balance/{migrationId}/refresh': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Refreshes the statistics on a completed migration.
     * @description This will read from the mapping table to get the latest count of migration records.
     *           It will also then count the number of failures on the main queue and update the history record.
     *           This is useful if the migration has been marked as completed when there were still messages on the dead letter
     *           queue that where then processed later.
     *           Requires role <b>MIGRATE_VISIT_BALANCE</b>
     */
    post: operations['refresh']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/visit-balance/{migrationId}/cancel': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Cancels a running migration. The actual cancellation might take several minutes to complete
     * @description Requires role <b>MIGRATE_VISIT_BALANCE</b>
     */
    post: operations['cancel_1']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/visit-balance': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Starts a visit balance migration. The entity type is determined by the migration filter
     * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_VISIT_BALANCE</b>
     */
    post: operations['migrateVisitBalance']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/sentencing/{migrationId}/cancel': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Cancels a running migration. The actual cancellation might take several minutes to complete
     * @description Requires role <b>MIGRATE_SENTENCING</b>
     */
    post: operations['cancel_2']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/sentencing': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Starts a sentencing migration
     * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_SENTENCING</b>
     */
    post: operations['migrateSentencing']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/incidents/{migrationId}/cancel': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Cancels a running migration. The actual cancellation might take several minutes to complete
     * @description Requires role <b>MIGRATE_INCIDENT_REPORTS</b>
     */
    post: operations['cancel_3']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/incidents': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Starts an incidents migration
     * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_INCIDENT_REPORTS</b>
     */
    post: operations['migrateIncidents']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/csip/{migrationId}/cancel': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Cancels a running migration. The actual cancellation might take several minutes to complete
     * @description Requires role <b>MIGRATE_CSIP</b>
     */
    post: operations['cancel_4']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/csip': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Starts a csip migration
     * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_CSIP</b>
     */
    post: operations['migrateCSIP']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/court-sentencing/{migrationId}/cancel': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Cancels a running migration. The actual cancellation might take several minutes to complete
     * @description Requires role <b>MIGRATE_SENTENCING</b>
     */
    post: operations['cancel_5']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/court-sentencing': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Starts a court case migration
     * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_SENTENCING</b>
     */
    post: operations['migrateCourtSentencing']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/corporate/{migrationId}/cancel': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Cancels a running migration. The actual cancellation might take several minutes to complete
     * @description Requires role <b>MIGRATE_CONTACTPERSON</b>
     */
    post: operations['cancel_6']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/corporate': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Starts a organisation migration. The entity type is determined by the migration filter
     * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_CONTACTPERSON</b>
     */
    post: operations['migrateCorporate']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/core-person/{migrationId}/cancel': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Cancels a running migration. The actual cancellation might take several minutes to complete
     * @description Requires role <b>MIGRATE_CORE_PERSON</b>
     */
    post: operations['cancel_7']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/core-person': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Starts a core person migration. The entity type is determined by the migration filter
     * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_CORE_PERSON</b>
     */
    post: operations['migrateCorePerson']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/contactperson/{migrationId}/cancel': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Cancels a running migration. The actual cancellation might take several minutes to complete
     * @description Requires role <b>MIGRATE_CONTACTPERSON</b>
     */
    post: operations['cancel_8']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/contactperson': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Starts a contact person migration. The entity type is determined by the migration filter
     * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_CONTACTPERSON</b>
     */
    post: operations['migrateContactPerson']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/contact-person-profile-details/{migrationId}/cancel': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Cancels a running migration. The actual cancellation might take several minutes to complete
     * @description Requires role <b>MIGRATE_CONTACTPERSON</b>
     */
    post: operations['cancel_9']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/contact-person-profile-details': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Starts a contact person profile details migration
     * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_CONTACTPERSON</b>
     */
    post: operations['migrateContactPerson_1']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/appointments/{migrationId}/cancel': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Cancels a running migration. The actual cancellation might take several minutes to complete
     * @description Requires role <b>MIGRATE_APPOINTMENTS</b>
     */
    post: operations['cancel_10']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/appointments': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Starts an appointments migration
     * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_APPOINTMENTS</b>
     */
    post: operations['migrateAppointments']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/allocations/{migrationId}/cancel': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Cancels a running migration. The actual cancellation might take several minutes to complete
     * @description Requires role <b>MIGRATE_ACTIVITIES</b>
     */
    post: operations['cancel_11']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/allocations': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Starts an allocations migration
     * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_ACTIVITIES</b>
     */
    post: operations['migrateAllocations']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/activities/{migrationId}/cancel': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Cancels a running migration. The actual cancellation might take several minutes to complete
     * @description Requires role <b>MIGRATE_ACTIVITIES</b>
     */
    post: operations['cancel_12']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/activities': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Starts an activities migration
     * @description Starts an asynchronous migration process. This operation will return immediately and the migration will be performed asynchronously. Requires role <b>MIGRATE_ACTIVITIES</b>
     */
    post: operations['migrateActivities']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/locations/id/{internalLocationId}/repair': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Resynchronises location from NOMIS to DPS, i.e. updates DPS with the data from Nomis
     * @description Used when an unexpected event has happened in NOMIS that has resulted in the DPS data drifting from NOMIS, so emergency use only. Requires ROLE_NOMIS_LOCATIONS
     */
    post: operations['repairPunishments']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/incidents/{incidentId}/repair': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Resynchronises an existing incident from NOMIS back to DPS
     * @description Used when an unexpected event has happened in NOMIS that has resulted in the DPS data drifting from NOMIS, so emergency use only. Requires ROLE_MIGRATE_INCIDENT_REPORTS
     */
    post: operations['repairIncident']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/queue-admin/get-dlq-messages/{dlqName}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['getDlqMessages']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/visits/rooms/usage': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * get visit room usage and mappings by filter
     * @description Retrieves a list of rooms with usage count and vsip mapping for the (filtered) visits
     */
    get: operations['getVisitRoomUsageDetailsByFilter']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/visits/history/{migrationId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets a specific migration history record
     * @description Requires role <b>MIGRATE_VISITS</b>
     */
    get: operations['get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/visits/history': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Lists all filtered migration history records un-paged for visits
     * @description The records are un-paged and requires role <b>MIGRATE_VISITS</b>
     */
    get: operations['getAll']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/visits/active-migration': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets active/currently running migration data, using migration record and migration queues
     * @description Requires role <b>MIGRATE_VISITS</b>
     */
    get: operations['getActiveMigrationDetails']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/visit-balance/history/{migrationId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets a specific migration history record
     * @description Requires role <b>MIGRATE_VISIT_BALANCE</b>
     */
    get: operations['get_1']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/visit-balance/history': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Lists all migration history records un-paged for visit balance
     * @description The records are un-paged and requires role <b>MIGRATE_VISIT_BALANCE</b>
     */
    get: operations['getAll_1']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/visit-balance/active-migration': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets active/currently running migration data, using migration record and migration queues
     * @description Requires role <b>MIGRATE_VISIT_BALANCE</b>
     */
    get: operations['activeMigration']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/sentencing/history/{migrationId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets a specific migration history record
     * @description Requires role <b>MIGRATE_SENTENCING</b>
     */
    get: operations['get_2']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/sentencing/history': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Lists all filtered migration history records un-paged for sentencing
     * @description The records are un-paged and requires role <b>MIGRATE_SENTENCING</b>
     */
    get: operations['getAll_2']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/sentencing/active-migration': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets active/currently running migration data, using migration record and migration queues
     * @description Requires role <b>MIGRATE_SENTENCING</b>
     */
    get: operations['getActiveMigrationDetails_1']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/incidents/history/{migrationId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets a specific migration history record
     * @description Requires role <b>MIGRATE_INCIDENT_REPORTS</b>
     */
    get: operations['get_3']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/incidents/history': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Lists all filtered migration history records un-paged for incidents
     * @description The records are un-paged and requires role <b>MIGRATE_INCIDENT_REPORTS</b>
     */
    get: operations['getAll_3']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/incidents/active-migration': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets active/currently running migration data, using migration record and migration queues
     * @description Requires role <b>MIGRATE_INCIDENT_REPORTS</b>
     */
    get: operations['getActiveMigrationDetails_2']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/history/{migrationId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets a specific migration history record
     * @description Requires role <b>ROLE_PRISONER_FROM_NOMIS__MIGRATION__RW</b>
     */
    get: operations['get_4']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/history/all/{migrationType}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Lists all filtered migration history for the specified migration type
     * @description The records are un-paged and requires role <b>ROLE_PRISONER_FROM_NOMIS__MIGRATION__RW</b>
     */
    get: operations['getHistory']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/history/active/{migrationType}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets active/currently running migration data, using migration record and migration queues
     * @description Requires role <b>ROLE_PRISONER_FROM_NOMIS__MIGRATION__RW</b>
     */
    get: operations['activeMigration_1']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/csip/history/{migrationId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets a specific migration history record
     * @description Requires role <b>MIGRATE_CSIP</b>
     */
    get: operations['get_5']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/csip/history': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Lists all filtered migration history records un-paged for csip
     * @description The records are un-paged and requires role <b>MIGRATE_CSIP</b>
     */
    get: operations['getAll_4']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/csip/active-migration': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets active/currently running migration data, using migration record and migration queues
     * @description Requires role <b>MIGRATE_CSIP</b>
     */
    get: operations['getActiveMigrationDetails_3']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/court-sentencing/history/{migrationId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets a specific migration history record
     * @description Requires role <b>MIGRATE_SENTENCING</b>
     */
    get: operations['get_6']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/court-sentencing/history': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Lists all filtered migration history records un-paged for court sentencing
     * @description The records are un-paged and requires role <b>MIGRATE_SENTENCING</b>
     */
    get: operations['getAll_5']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/court-sentencing/active-migration': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets active/currently running migration data, using migration record and migration queues
     * @description Requires role <b>MIGRATE_SENTENCING</b>
     */
    get: operations['getActiveMigrationDetails_4']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/corporate/history/{migrationId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets a specific migration history record
     * @description Requires role <b>MIGRATE_CONTACTPERSON</b>
     */
    get: operations['get_7']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/corporate/history': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Lists all migration history records un-paged for organisations
     * @description The records are un-paged and requires role <b>MIGRATE_CONTACTPERSON</b>
     */
    get: operations['getAll_6']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/corporate/active-migration': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets active/currently running migration data, using migration record and migration queues
     * @description Requires role <b>MIGRATE_CONTACTPERSON</b>
     */
    get: operations['activeMigration_2']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/core-person/history/{migrationId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets a specific migration history record
     * @description Requires role <b>MIGRATE_CORE_PERSON</b>
     */
    get: operations['get_8']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/core-person/history': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Lists all migration history records un-paged for core person
     * @description The records are un-paged and requires role <b>MIGRATE_CORE_PERSON</b>
     */
    get: operations['getAll_7']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/core-person/active-migration': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets active/currently running migration data, using migration record and migration queues
     * @description Requires role <b>MIGRATE_CORE_PERSON</b>
     */
    get: operations['activeMigration_3']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/contactperson/history/{migrationId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets a specific migration history record
     * @description Requires role <b>MIGRATE_CONTACTPERSON</b>
     */
    get: operations['get_9']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/contactperson/history': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Lists all migration history records un-paged for contact person
     * @description The records are un-paged and requires role <b>MIGRATE_CONTACTPERSON</b>
     */
    get: operations['getAll_8']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/contactperson/active-migration': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets active/currently running migration data, using migration record and migration queues
     * @description Requires role <b>MIGRATE_CONTACTPERSON</b>
     */
    get: operations['activeMigration_4']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/contact-person-profile-details/history/{migrationId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets a specific migration history record
     * @description Requires role <b>MIGRATE_CONTACTPERSON</b>
     */
    get: operations['get_10']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/contact-person-profile-details/history': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Lists all migration history records un-paged for contact person profile details
     * @description The records are un-paged and requires role <b>MIGRATE_CONTACTPERSON</b>
     */
    get: operations['getAll_9']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/contact-person-profile-details/active-migration': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets active/currently running migration data, using migration record and migration queues
     * @description Requires role <b>MIGRATE_CONTACTPERSON</b>
     */
    get: operations['activeMigration_5']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/appointments/history/{migrationId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets a specific migration history record
     * @description Requires role <b>MIGRATE_APPOINTMENTS</b>
     */
    get: operations['get_11']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/appointments/history': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Lists all filtered migration history records un-paged for appointments
     * @description The records are un-paged and requires role <b>MIGRATE_APPOINTMENTS</b>
     */
    get: operations['getAll_10']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/appointments/active-migration': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets active/currently running migration data, using migration record and migration queues
     * @description Requires role <b>MIGRATE_APPOINTMENTS</b>
     */
    get: operations['getActiveMigrationDetails_5']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/allocations/history/{migrationId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets a specific migration history record
     * @description Requires role <b>MIGRATE_ACTIVITIES</b>
     */
    get: operations['get_12']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/allocations/history': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Lists all filtered migration history records un-paged for allocations
     * @description The records are un-paged and requires role <b>MIGRATE_ACTIVITIES</b>
     */
    get: operations['getAll_11']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/allocations/active-migration': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets active/currently running migration data, using migration record and migration queues
     * @description Requires role <b>MIGRATE_ACTIVITIES</b>
     */
    get: operations['getActiveMigrationDetails_6']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/activities/history/{migrationId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets a specific migration history record
     * @description Requires role <b>MIGRATE_ACTIVITIES</b>
     */
    get: operations['get_13']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/activities/history': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Lists all filtered migration history records un-paged for activities
     * @description The records are un-paged and requires role <b>MIGRATE_ACTIVITIES</b>
     */
    get: operations['getAll_12']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/activities/active-migration': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Gets active/currently running migration data, using migration record and migration queues
     * @description Requires role <b>MIGRATE_ACTIVITIES</b>
     */
    get: operations['getActiveMigrationDetails_7']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/history': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Lists all filtered migration history
     * @description The records are un-paged and requires role <b>MIGRATION_ADMIN</b>
     */
    get: operations['getAll_13']
    put?: never
    post?: never
    /**
     * Deletes all migration history records
     * @description This is only required for test environments and requires role <b>MIGRATION_ADMIN</b>
     */
    delete: operations['deleteAll']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/casenotes/{nomisCaseNoteId}/repair': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    /**
     * Repairs a casenote that has been deleted in Nomis by removing any associated mappings in the mapping table and alerting DPS.
     *           *** IMPORTANT*** This endpoint will delete any other associated Nomis Mappings (if matching the associated DPS Case Note) as there is a
     *           one to many mapping between DPS and Nomis case notes.
     *           Any related (deleted) Nomis case notes will be indicated with the casenotes-synchronisation-deleted-related-success telemetry event
     * @description Used when an unexpected event has happened in NOMIS that has resulted in the DPS data drifting from NOMIS, so emergency use only. Requires ROLE_NOMIS_CASENOTES
     */
    delete: operations['repairDeletedCaseNote']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    ErrorResponse: {
      /** Format: int32 */
      status: number
      /** Format: int32 */
      errorCode?: number
      userMessage?: string
      developerMessage?: string
      moreInfo?: string
    }
    ResultUnit: Record<string, never>
    RetryDlqResult: {
      /** Format: int32 */
      messagesFoundCount: number
    }
    PurgeQueueResult: {
      /** Format: int32 */
      messagesFoundCount: number
    }
    /** @description Filter specifying what should be migrated from NOMIS to Visits service */
    VisitsMigrationFilter: {
      /**
       * @description List of prison Ids (AKA Agency Ids) to migrate visits from
       * @example MDI
       */
      prisonIds: string[]
      /**
       * @description List of visit types to migrate
       * @default ["SCON"]
       * @example [
       *       "SCON",
       *       "OFFI"
       *     ]
       */
      visitTypes: string[]
      /**
       * Format: date-time
       * @description Only include visits created after this date. NB this is creation date not the actual visit date
       * @example 2020-03-23T12:00:00
       */
      fromDateTime?: string
      /**
       * Format: date-time
       * @description Only include visits created before this date. NB this is creation date not the actual visit date
       * @example 2020-03-24T12:00:00
       */
      toDateTime?: string
      /**
       * @description When true exclude visits without an associated room (visits created during the VSIP synchronisation process), defaults to false. Only required during testing when mapping records are manually deleted
       * @default false
       * @example false
       */
      ignoreMissingRoom: boolean
    }
    MigrationContextVisitsMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'APPOINTMENTS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'CORE_PERSON'
        | 'CSIP'
        | 'INCIDENTS'
        | 'COURT_SENTENCING'
        | 'PERSONALRELATIONSHIPS'
        | 'PERSONALRELATIONSHIPS_PROFILEDETAIL'
        | 'ORGANISATIONS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'VISIT_BALANCE'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['VisitsMigrationFilter']
    }
    /** @description Filter specifying what should be migrated from NOMIS to DPS */
    VisitBalanceMigrationFilter: {
      /**
       * @description Only include visit balances for this prison id
       * @example MDI
       */
      prisonId?: string
    }
    MigrationContextVisitBalanceMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'APPOINTMENTS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'CORE_PERSON'
        | 'CSIP'
        | 'INCIDENTS'
        | 'COURT_SENTENCING'
        | 'PERSONALRELATIONSHIPS'
        | 'PERSONALRELATIONSHIPS_PROFILEDETAIL'
        | 'ORGANISATIONS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'VISIT_BALANCE'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['VisitBalanceMigrationFilter']
    }
    /** @description Filter specifying what should be migrated from NOMIS to Sentencing service */
    SentencingMigrationFilter: {
      /**
       * Format: date
       * @description Only include Sentencing entity issued on or after this date
       * @example 2020-03-23
       */
      fromDate?: string
      /**
       * Format: date
       * @description Only include Sentencing entity issued before or on this date
       * @example 2020-03-24
       */
      toDate?: string
    }
    MigrationContextSentencingMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'APPOINTMENTS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'CORE_PERSON'
        | 'CSIP'
        | 'INCIDENTS'
        | 'COURT_SENTENCING'
        | 'PERSONALRELATIONSHIPS'
        | 'PERSONALRELATIONSHIPS_PROFILEDETAIL'
        | 'ORGANISATIONS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'VISIT_BALANCE'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['SentencingMigrationFilter']
    }
    /** @description Filter specifying what should be migrated from NOMIS to the Incident Reporting service */
    IncidentsMigrationFilter: {
      /**
       * Format: date
       * @description Only include incidents created on or after this date
       * @example 2020-03-23
       */
      fromDate?: string
      /**
       * Format: date
       * @description Only include incidents created before or on this date
       * @example 2020-03-24
       */
      toDate?: string
    }
    MigrationContextIncidentsMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'APPOINTMENTS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'CORE_PERSON'
        | 'CSIP'
        | 'INCIDENTS'
        | 'COURT_SENTENCING'
        | 'PERSONALRELATIONSHIPS'
        | 'PERSONALRELATIONSHIPS_PROFILEDETAIL'
        | 'ORGANISATIONS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'VISIT_BALANCE'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['IncidentsMigrationFilter']
    }
    /** @description Filter specifying what should be migrated from NOMIS to the CSIP Reporting service */
    CSIPMigrationFilter: {
      /**
       * Format: date
       * @description Only include csip created on or after this date
       * @example 2020-03-23
       */
      fromDate?: string
      /**
       * Format: date
       * @description Only include csip created before or on this date
       * @example 2020-03-24
       */
      toDate?: string
    }
    MigrationContextCSIPMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'APPOINTMENTS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'CORE_PERSON'
        | 'CSIP'
        | 'INCIDENTS'
        | 'COURT_SENTENCING'
        | 'PERSONALRELATIONSHIPS'
        | 'PERSONALRELATIONSHIPS_PROFILEDETAIL'
        | 'ORGANISATIONS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'VISIT_BALANCE'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['CSIPMigrationFilter']
    }
    /** @description Filter to allow initial migration testing with 1 offender */
    CourtSentencingMigrationFilter: {
      offenderNo?: string
      /**
       * Format: date
       * @description Only include court cases created on or after this date
       * @example 2020-03-23
       */
      fromDate?: string
      /**
       * Format: date
       * @description Only include court cases created before or on this date
       * @example 2020-03-24
       */
      toDate?: string
    }
    MigrationContextCourtSentencingMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'APPOINTMENTS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'CORE_PERSON'
        | 'CSIP'
        | 'INCIDENTS'
        | 'COURT_SENTENCING'
        | 'PERSONALRELATIONSHIPS'
        | 'PERSONALRELATIONSHIPS_PROFILEDETAIL'
        | 'ORGANISATIONS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'VISIT_BALANCE'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['CourtSentencingMigrationFilter']
    }
    /** @description Filter specifying what should be migrated from NOMIS to DPS */
    OrganisationsMigrationFilter: {
      /**
       * Format: date
       * @description Only include Organisations created on or after this date
       * @example 2020-03-23
       */
      fromDate?: string
      /**
       * Format: date
       * @description Only include Organisations created before or on this date
       * @example 2020-03-24
       */
      toDate?: string
    }
    MigrationContextOrganisationsMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'APPOINTMENTS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'CORE_PERSON'
        | 'CSIP'
        | 'INCIDENTS'
        | 'COURT_SENTENCING'
        | 'PERSONALRELATIONSHIPS'
        | 'PERSONALRELATIONSHIPS_PROFILEDETAIL'
        | 'ORGANISATIONS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'VISIT_BALANCE'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['OrganisationsMigrationFilter']
    }
    /** @description Filter specifying what should be migrated from NOMIS to DPS */
    CorePersonMigrationFilter: {
      /**
       * Format: date
       * @description Only include Persons created on or after this date
       * @example 2020-03-23
       */
      fromDate?: string
      /**
       * Format: date
       * @description Only include Persons created before or on this date
       * @example 2020-03-24
       */
      toDate?: string
    }
    MigrationContextCorePersonMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'APPOINTMENTS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'CORE_PERSON'
        | 'CSIP'
        | 'INCIDENTS'
        | 'COURT_SENTENCING'
        | 'PERSONALRELATIONSHIPS'
        | 'PERSONALRELATIONSHIPS_PROFILEDETAIL'
        | 'ORGANISATIONS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'VISIT_BALANCE'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['CorePersonMigrationFilter']
    }
    /** @description Filter specifying what should be migrated from NOMIS to DPS */
    ContactPersonMigrationFilter: {
      /**
       * Format: date
       * @description Only include Persons created on or after this date
       * @example 2020-03-23
       */
      fromDate?: string
      /**
       * Format: date
       * @description Only include Persons created before or on this date
       * @example 2020-03-24
       */
      toDate?: string
    }
    MigrationContextContactPersonMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'APPOINTMENTS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'CORE_PERSON'
        | 'CSIP'
        | 'INCIDENTS'
        | 'COURT_SENTENCING'
        | 'PERSONALRELATIONSHIPS'
        | 'PERSONALRELATIONSHIPS_PROFILEDETAIL'
        | 'ORGANISATIONS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'VISIT_BALANCE'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['ContactPersonMigrationFilter']
    }
    /** @description Filter specifying what should be migrated from NOMIS to DPS */
    ContactPersonProfileDetailsMigrationFilter: {
      /**
       * @description Only migrate a single prisoner - used for testing
       * @example A1234BC
       */
      prisonerNumber?: string
    }
    MigrationContextContactPersonProfileDetailsMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'APPOINTMENTS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'CORE_PERSON'
        | 'CSIP'
        | 'INCIDENTS'
        | 'COURT_SENTENCING'
        | 'PERSONALRELATIONSHIPS'
        | 'PERSONALRELATIONSHIPS_PROFILEDETAIL'
        | 'ORGANISATIONS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'VISIT_BALANCE'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['ContactPersonProfileDetailsMigrationFilter']
    }
    /** @description Filter specifying what should be migrated from NOMIS to Appointments service */
    AppointmentsMigrationFilter: {
      /**
       * Format: date
       * @description Only include appointments on or after this date
       * @example 2020-03-23
       */
      fromDate?: string
      /**
       * Format: date
       * @description Only include appointments before or on this date
       * @example 2020-03-24
       */
      toDate?: string
      /**
       * @description Only include appointments for these prison ids
       * @example ['MDI','LEI']
       */
      prisonIds: string[]
    }
    MigrationContextAppointmentsMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'APPOINTMENTS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'CORE_PERSON'
        | 'CSIP'
        | 'INCIDENTS'
        | 'COURT_SENTENCING'
        | 'PERSONALRELATIONSHIPS'
        | 'PERSONALRELATIONSHIPS_PROFILEDETAIL'
        | 'ORGANISATIONS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'VISIT_BALANCE'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['AppointmentsMigrationFilter']
    }
    /** @description Filter specifying which allocations should be migrated from NOMIS to DPS service */
    AllocationsMigrationFilter: {
      /**
       * @description Only include allocations for this prison id
       * @example MDI
       */
      prisonId: string
      /**
       * Format: int64
       * @description Only include allocations from a single course activity
       * @example 12345
       */
      courseActivityId?: number
    }
    MigrationContextAllocationsMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'APPOINTMENTS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'CORE_PERSON'
        | 'CSIP'
        | 'INCIDENTS'
        | 'COURT_SENTENCING'
        | 'PERSONALRELATIONSHIPS'
        | 'PERSONALRELATIONSHIPS_PROFILEDETAIL'
        | 'ORGANISATIONS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'VISIT_BALANCE'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['AllocationsMigrationFilter']
    }
    /** @description Filter specifying which activities should be migrated from NOMIS to DPS service */
    ActivitiesMigrationFilter: {
      /**
       * @description Only include activities for this prison id
       * @example MDI
       */
      prisonId: string
      /**
       * Format: int64
       * @description Only include a single course activity
       * @example 12345
       */
      courseActivityId?: number
      /**
       * Format: date
       * @description The date the new activity will start
       * @example 2025-01-31
       */
      activityStartDate?: string
    }
    MigrationContextActivitiesMigrationFilter: {
      /** @enum {string} */
      type:
        | 'VISITS'
        | 'APPOINTMENTS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'CORE_PERSON'
        | 'CSIP'
        | 'INCIDENTS'
        | 'COURT_SENTENCING'
        | 'PERSONALRELATIONSHIPS'
        | 'PERSONALRELATIONSHIPS_PROFILEDETAIL'
        | 'ORGANISATIONS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'VISIT_BALANCE'
      migrationId: string
      /** Format: int64 */
      estimatedCount: number
      body: components['schemas']['ActivitiesMigrationFilter']
    }
    DlqMessage: {
      body: {
        [key: string]: Record<string, never>
      }
      messageId: string
    }
    GetDlqResult: {
      /** Format: int32 */
      messagesFoundCount: number
      /** Format: int32 */
      messagesReturnedCount: number
      messages: components['schemas']['DlqMessage'][]
    }
    /** @description Visit room usage and vsip mapping */
    VisitRoomUsageResponse: {
      /** @description The nomis internal location description */
      agencyInternalLocationDescription: string
      /**
       * Format: int64
       * @description room usage count
       */
      count: number
      /** @description VSIP room mapping */
      vsipRoom?: string
      /** @description The nomis prison id */
      prisonId: string
    }
    MigrationHistory: {
      migrationId: string
      /** Format: date-time */
      whenStarted: string
      /** Format: date-time */
      whenEnded?: string
      /** Format: int64 */
      estimatedRecordCount: number
      filter?: string
      /** Format: int64 */
      recordsMigrated: number
      /** Format: int64 */
      recordsFailed: number
      /** @enum {string} */
      migrationType:
        | 'VISITS'
        | 'APPOINTMENTS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'CORE_PERSON'
        | 'CSIP'
        | 'INCIDENTS'
        | 'COURT_SENTENCING'
        | 'PERSONALRELATIONSHIPS'
        | 'PERSONALRELATIONSHIPS_PROFILEDETAIL'
        | 'ORGANISATIONS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'VISIT_BALANCE'
      /** @enum {string} */
      status: 'STARTED' | 'COMPLETED' | 'CANCELLED_REQUESTED' | 'CANCELLED'
      id: string
      isNew: boolean
    }
    InProgressMigration: {
      /** Format: int64 */
      recordsMigrated?: number
      /** Format: int32 */
      toBeProcessedCount?: number
      /** Format: int32 */
      beingProcessedCount?: number
      /** Format: int32 */
      recordsFailed?: number
      migrationId?: string
      /** Format: date-time */
      whenStarted?: string
      /** Format: int64 */
      estimatedRecordCount?: number
      /** @enum {string} */
      migrationType?:
        | 'VISITS'
        | 'APPOINTMENTS'
        | 'ACTIVITIES'
        | 'ALLOCATIONS'
        | 'CORE_PERSON'
        | 'CSIP'
        | 'INCIDENTS'
        | 'COURT_SENTENCING'
        | 'PERSONALRELATIONSHIPS'
        | 'PERSONALRELATIONSHIPS_PROFILEDETAIL'
        | 'ORGANISATIONS'
        | 'SENTENCING_ADJUSTMENTS'
        | 'VISIT_BALANCE'
      /** @enum {string} */
      status?: 'STARTED' | 'COMPLETED' | 'CANCELLED_REQUESTED' | 'CANCELLED'
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  'syncContactPersonProfileDetail-0E7RQCE': {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonerNumber: string
        profileType: 'MARITAL' | 'CHILD'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Profile detail synchronised to DPS */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ResultUnit']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to start migration */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Found nothing to synchronise */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  retryDlq: {
    parameters: {
      query?: never
      header?: never
      path: {
        dlqName: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['RetryDlqResult']
        }
      }
    }
  }
  retryAllDlqs: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['RetryDlqResult'][]
        }
      }
    }
  }
  purgeQueue: {
    parameters: {
      query?: never
      header?: never
      path: {
        queueName: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['PurgeQueueResult']
        }
      }
    }
  }
  endMigratedActivities: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Migration ID */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Invalid request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires role NOMIS_ACTIVITIES */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  incidentsReconciliation: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Accepted */
      202: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  repairAlerts: {
    parameters: {
      query?: never
      header?: never
      path: {
        offenderNo: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  repairPostMergeAdjustments: {
    parameters: {
      query?: never
      header?: never
      path: {
        bookingId: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  cancel: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Cancellation request accepted */
      202: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description No running migration found with migration id */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  migrateVisits: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['VisitsMigrationFilter']
      }
    }
    responses: {
      /** @description Migration process started */
      202: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationContextVisitsMigrationFilter']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to start migration */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration already in progress */
      409: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  refresh: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Refresh completed */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Migration is not in a completed state */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  cancel_1: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Cancellation request accepted */
      202: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  migrateVisitBalance: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['VisitBalanceMigrationFilter']
      }
    }
    responses: {
      /** @description Migration process started */
      202: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationContextVisitBalanceMigrationFilter']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to start migration */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration already in progress */
      409: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  cancel_2: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Cancellation request accepted */
      202: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description No running migration found with migration id */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  migrateSentencing: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['SentencingMigrationFilter']
      }
    }
    responses: {
      /** @description Migration process started */
      202: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationContextSentencingMigrationFilter']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to start migration */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration already in progress */
      409: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  cancel_3: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Cancellation request accepted */
      202: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description No running migration found with migration id */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  migrateIncidents: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['IncidentsMigrationFilter']
      }
    }
    responses: {
      /** @description Migration process started */
      202: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationContextIncidentsMigrationFilter']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to start migration */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration already in progress */
      409: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  cancel_4: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Cancellation request accepted */
      202: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description No running migration found with migration id */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  migrateCSIP: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CSIPMigrationFilter']
      }
    }
    responses: {
      /** @description Migration process started */
      202: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationContextCSIPMigrationFilter']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to start migration */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration already in progress */
      409: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  cancel_5: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Cancellation request accepted */
      202: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description No running migration found with migration id */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  migrateCourtSentencing: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CourtSentencingMigrationFilter']
      }
    }
    responses: {
      /** @description Migration process started */
      202: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationContextCourtSentencingMigrationFilter']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to start migration */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration already in progress */
      409: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  cancel_6: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Cancellation request accepted */
      202: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  migrateCorporate: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['OrganisationsMigrationFilter']
      }
    }
    responses: {
      /** @description Migration process started */
      202: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationContextOrganisationsMigrationFilter']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to start migration */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration already in progress */
      409: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  cancel_7: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Cancellation request accepted */
      202: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  migrateCorePerson: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CorePersonMigrationFilter']
      }
    }
    responses: {
      /** @description Migration process started */
      202: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationContextCorePersonMigrationFilter']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to start migration */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration already in progress */
      409: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  cancel_8: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Cancellation request accepted */
      202: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  migrateContactPerson: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ContactPersonMigrationFilter']
      }
    }
    responses: {
      /** @description Migration process started */
      202: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationContextContactPersonMigrationFilter']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to start migration */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration already in progress */
      409: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  cancel_9: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Cancellation request accepted */
      202: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  migrateContactPerson_1: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ContactPersonProfileDetailsMigrationFilter']
      }
    }
    responses: {
      /** @description Migration process started */
      202: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationContextContactPersonProfileDetailsMigrationFilter']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to start migration */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  cancel_10: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Cancellation request accepted */
      202: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description No running migration found with migration id */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  migrateAppointments: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AppointmentsMigrationFilter']
      }
    }
    responses: {
      /** @description Migration process started */
      202: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationContextAppointmentsMigrationFilter']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to start migration */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration already in progress */
      409: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  cancel_11: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Cancellation request accepted */
      202: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description No running migration found with migration id */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  migrateAllocations: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AllocationsMigrationFilter']
      }
    }
    responses: {
      /** @description Migration process started */
      202: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationContextAllocationsMigrationFilter']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to start migration */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration already in progress */
      409: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  cancel_12: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Cancellation request accepted */
      202: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description No running migration found with migration id */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  migrateActivities: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ActivitiesMigrationFilter']
      }
    }
    responses: {
      /** @description Migration process started */
      202: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationContextActivitiesMigrationFilter']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to start migration */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration already in progress */
      409: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  repairPunishments: {
    parameters: {
      query?: {
        /** @description if true, record will be deleted in DPS and mapping table */
        recordDeleted?: boolean
      }
      header?: never
      path: {
        /** @description Id of the location in Nomis */
        internalLocationId: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  repairIncident: {
    parameters: {
      query?: never
      header?: never
      path: {
        incidentId: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  getDlqMessages: {
    parameters: {
      query?: {
        maxMessages?: number
      }
      header?: never
      path: {
        dlqName: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['GetDlqResult']
        }
      }
    }
  }
  getVisitRoomUsageDetailsByFilter: {
    parameters: {
      query?: {
        /**
         * @description Filter results by prison ids (returns all prisons if not specified)
         * @example ['MDI','LEI']
         */
        prisonIds?: string[]
        /**
         * @description Filter results by visitType (returns all types if not specified)
         * @example ['SCON','OFFI']
         */
        visitTypes?: string[]
        /**
         * @description Filter results by visits that start on or after the given timestamp
         * @example 2021-11-03T09:00:00
         */
        fromDateTime?: string
        /**
         * @description Filter results by visits that start on or before the given timestamp
         * @example 2021-11-03T09:00:00
         */
        toDateTime?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description list of visit room and count is returned */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['VisitRoomUsageResponse'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to start migration */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description The visit migration history record */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getAll: {
    parameters: {
      query?: {
        /**
         * @description Only include migrations started after this date time
         * @example 2020-03-23T12:00:00
         */
        fromDateTime?: string
        /**
         * @description Only include migrations started before this date time
         * @example 2020-03-24T12:00:00
         */
        toDateTime?: string
        /**
         * @description When true only include migrations that had at least one failure
         * @example false
         */
        includeOnlyFailures?: boolean
        /**
         * @description Specify the prison associated with the migration
         * @example HEI
         */
        prisonId?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description All visit migration history records */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getActiveMigrationDetails: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  get_1: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description The visit balance migration history record */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getAll_1: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description All visit balance migration history records */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  activeMigration: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  get_2: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description The sentencing migration history record */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getAll_2: {
    parameters: {
      query?: {
        /**
         * @description Only include migrations started after this date time
         * @example 2020-03-23T12:00:00
         */
        fromDateTime?: string
        /**
         * @description Only include migrations started before this date time
         * @example 2020-03-24T12:00:00
         */
        toDateTime?: string
        /**
         * @description When true only include migrations that had at least one failure
         * @example false
         */
        includeOnlyFailures?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description All sentencing migration history records */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getActiveMigrationDetails_1: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  get_3: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description The migration history record */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getAll_3: {
    parameters: {
      query?: {
        /**
         * @description Only include migrations started after this date time
         * @example 2020-03-23T12:00:00
         */
        fromDateTime?: string
        /**
         * @description Only include migrations started before this date time
         * @example 2020-03-24T12:00:00
         */
        toDateTime?: string
        /**
         * @description When true only include migrations that had at least one failure
         * @example false
         */
        includeOnlyFailures?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description All migration history records */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getActiveMigrationDetails_2: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  get_4: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description The visit balance migration history record */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getHistory: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Migration Type */
        migrationType:
          | 'VISITS'
          | 'APPOINTMENTS'
          | 'ACTIVITIES'
          | 'ALLOCATIONS'
          | 'CORE_PERSON'
          | 'CSIP'
          | 'INCIDENTS'
          | 'COURT_SENTENCING'
          | 'PERSONALRELATIONSHIPS'
          | 'PERSONALRELATIONSHIPS_PROFILEDETAIL'
          | 'ORGANISATIONS'
          | 'SENTENCING_ADJUSTMENTS'
          | 'VISIT_BALANCE'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description All history records for specified migration type */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  activeMigration_1: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Migration Type */
        migrationType:
          | 'VISITS'
          | 'APPOINTMENTS'
          | 'ACTIVITIES'
          | 'ALLOCATIONS'
          | 'CORE_PERSON'
          | 'CSIP'
          | 'INCIDENTS'
          | 'COURT_SENTENCING'
          | 'PERSONALRELATIONSHIPS'
          | 'PERSONALRELATIONSHIPS_PROFILEDETAIL'
          | 'ORGANISATIONS'
          | 'SENTENCING_ADJUSTMENTS'
          | 'VISIT_BALANCE'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  get_5: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description The migration history record */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getAll_4: {
    parameters: {
      query?: {
        /**
         * @description Only include migrations started after this date time
         * @example 2020-03-23T12:00:00
         */
        fromDateTime?: string
        /**
         * @description Only include migrations started before this date time
         * @example 2020-03-24T12:00:00
         */
        toDateTime?: string
        /**
         * @description When true only include migrations that had at least one failure
         * @example false
         */
        includeOnlyFailures?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description All migration history records */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getActiveMigrationDetails_3: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  get_6: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description The court sentencing migration history record */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getAll_5: {
    parameters: {
      query?: {
        /**
         * @description Only include migrations started after this date time
         * @example 2020-03-23T12:00:00
         */
        fromDateTime?: string
        /**
         * @description Only include migrations started before this date time
         * @example 2020-03-24T12:00:00
         */
        toDateTime?: string
        /**
         * @description When true only include migrations that had at least one failure
         * @example false
         */
        includeOnlyFailures?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description All court sentencing migration history records */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getActiveMigrationDetails_4: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  get_7: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description The corporate migration history record */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getAll_6: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description All corporate migration history records */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  activeMigration_2: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  get_8: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description The core person migration history record */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getAll_7: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description All core person migration history records */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  activeMigration_3: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  get_9: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description The contact person migration history record */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getAll_8: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description All contact person migration history records */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  activeMigration_4: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  get_10: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description The contact person migration history record */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getAll_9: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description All contact person migration history records */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  activeMigration_5: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  get_11: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description The migration history record */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getAll_10: {
    parameters: {
      query?: {
        /**
         * @description Only include migrations started after this date time
         * @example 2020-03-23T12:00:00
         */
        fromDateTime?: string
        /**
         * @description Only include migrations started before this date time
         * @example 2020-03-24T12:00:00
         */
        toDateTime?: string
        /**
         * @description When true only include migrations that had at least one failure
         * @example false
         */
        includeOnlyFailures?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description All migration history records */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getActiveMigrationDetails_5: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  get_12: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description The migration history record */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getAll_11: {
    parameters: {
      query?: {
        /**
         * @description Only include migrations started after this date time
         * @example 2020-03-23T12:00:00
         */
        fromDateTime?: string
        /**
         * @description Only include migrations started before this date time
         * @example 2020-03-24T12:00:00
         */
        toDateTime?: string
        /**
         * @description When true only include migrations that had at least one failure
         * @example false
         */
        includeOnlyFailures?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description All migration history records */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getActiveMigrationDetails_6: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  get_13: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Migration Id
         * @example 2020-03-24T12:00:00
         */
        migrationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description The migration history record */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Migration not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getAll_12: {
    parameters: {
      query?: {
        /**
         * @description Only include migrations started after this date time
         * @example 2020-03-23T12:00:00
         */
        fromDateTime?: string
        /**
         * @description Only include migrations started before this date time
         * @example 2020-03-24T12:00:00
         */
        toDateTime?: string
        /**
         * @description When true only include migrations that had at least one failure
         * @example false
         */
        includeOnlyFailures?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description All migration history records */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getActiveMigrationDetails_7: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Only called during an active migration from the UI - assumes latest migration is active */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['InProgressMigration']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getAll_13: {
    parameters: {
      query?: {
        /**
         * @description List of migration types, when omitted all migration types will be returned
         * @example VISITS
         */
        migrationTypes?: string[]
        /**
         * @description Only include migrations started after this date time
         * @example 2020-03-23T12:00:00
         */
        fromDateTime?: string
        /**
         * @description Only include migrations started before this date time
         * @example 2020-03-24T12:00:00
         */
        toDateTime?: string
        /**
         * @description When true only include migrations that had at least one failure
         * @example false
         */
        includeOnlyFailures?: boolean
        /**
         * @description Specify a word of phrase that will appear in the filter related to the migration
         * @example HEI
         */
        filterContains?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description All history records */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrationHistory'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  deleteAll: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description All history records deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  repairDeletedCaseNote: {
    parameters: {
      query?: never
      header?: never
      path: {
        nomisCaseNoteId: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
}
